import{Chart as d,registerables as r}from"https://cdn.jsdelivr.net/npm/chart.js/dist/chart.esm.js";d.register(...r);var e="chart-js",c="ChartJs",o=document.createElement("template");o.innerHTML=`
    <style>
        :host {
            display: block;   /* default is inline */
            contain: content; /* performance boost */
            background-color: var(--surface3);
        }
    </style>
    <canvas id="chart" width="400" height="400"></canvas>
    <slot></slot>
`;var s=class a extends HTMLElement{_ui={type:e,event:void 0,id:void 0,name:void 0,data:void 0};$;name=void 0;static _iCount=0;_uibMsgHandler(t){}constructor(){super(),this.attachShadow({mode:"open",delegatesFocus:!0}).append(o.content.cloneNode(!0)),this.$=this.shadowRoot.querySelector.bind(this.shadowRoot),this.dispatchEvent(new Event(`${e}:construction`,{bubbles:!0,composed:!0}))}static get observedAttributes(){return["name"]}attributeChangedCallback(t,n,i){n!==i&&(this[t]=i,this.dispatchEvent(new CustomEvent(`${e}:attribChanged`,{bubbles:!0,composed:!0,detail:{id:this.id,name:this.name,attribute:t,newVal:i,oldVal:n}})))}connectedCallback(){++a._iCount,this.name=this.getAttribute("name"),this.id||(this.name?this.id=this.name.toLowerCase().replace(/\s/g,"_"):this.id=`sc-${a._iCount}`),document.addEventListener(`uibuilder:msg:_ui:update:${this.id}`,this._uibMsgHandler.bind(this));let t=this.shadowRoot.getElementById("chart"),n=new d(t,{type:"bar",data:{labels:["Red","Blue","Yellow","Green","Purple","Orange"],datasets:[{label:"# of Votes",data:[12,19,3,5,2,3],borderWidth:1}]},options:{scales:{y:{beginAtZero:!0}}}});this.dispatchEvent(new CustomEvent(`${e}:connected`,{bubbles:!0,composed:!0,detail:{id:this.id,name:this.name}}))}disconnectedCallback(){document.removeEventListener(`uibuilder:msg:_ui:update:${this.id}`,this._uibMsgHandler),this.dispatchEvent(new CustomEvent(`${e}:disconnected`,{bubbles:!0,composed:!0,detail:{id:this.id,name:this.name}}))}};window[c]=s;customElements.define(e,s);export{s as default};
//# sourceMappingURL=chart-js.esm.min.js.map
