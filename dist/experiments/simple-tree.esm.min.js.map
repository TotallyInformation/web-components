{
  "version": 3,
  "sources": ["../../src/experiments/simple-tree.js"],
  "sourcesContent": ["/** Define a new zero dependency custom web component ECMA module that can be used as an HTML tag\n *\n * TO USE THIS TEMPLATE: CHANGE ALL INSTANCES OF 'SimpleContainer' and 'simple-container' & change version below\n *\n * version 0.1 2022-05-15 Pre-release\n *\n * See: https://web.dev/custom-elements-v1/, https://web.dev/shadowdom-v1/\n *\n * See https://github.com/runem/web-component-analyzer#-how-to-document-your-components-using-jsdoc on how to document\n * Use `npx web-component-analyzer ./components/button-send.js` to create/update the documentation\n *     or paste into https://runem.github.io/web-component-analyzer/\n * Use `npx web-component-analyzer ./components/*.js --format vscode --outFile ./vscode-descriptors/ti-web-components.html-data.json`\n *     to generate/update vscode custom data files. See https://github.com/microsoft/vscode-custom-data/tree/main/samples/webcomponents\n *\n */\n/**\n * Copyright (c) 2022-2025 Julian Knight (Totally Information)\n * https://it.knightnet.org.uk, https://github.com/TotallyInformation\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst componentName = 'simple-container'\nconst className = 'SimpleContainer'\n\nconst template = document.createElement('template')\n// TODO: Unpack & - & = parent selector, eg. &::after => .tree ul::after\ntemplate.innerHTML = /*html*/`\n    <style>\n        :host {\n            display: block;   /* default is inline */\n            contain: content; /* performance boost */\n        }\n        .tree {\n            @if $reverse {\n                transform: rotate(180deg);\n                transform-origin: 50%;\n            }\n        }\n\n        .tree ul {\n            position: relative;\n                padding: 1em 0; \n            white-space: nowrap;\n            margin: 0 auto;\n            text-align: center;\n            &::after {\n                content: '';\n                display: table;\n                clear: both;\n            }\n        }\n\n        .tree li {\n            display: inline-block; // need white-space fix\n            vertical-align: top;\n            text-align: center;\n                list-style-type: none;\n                position: relative;\n                padding: 1em .5em 0 .5em;\n            &::before,\n            &::after {\n                content: '';\n                position: absolute; \n                top: 0; \n                right: 50%;\n                border-top: $border-width solid #ccc;\n                width: 50%; \n                height: 1em;\n            }\n            &::after {\n                right: auto; \n                left: 50%;\n                border-left: $border-width solid #ccc;\n            }\n            &:only-child::after,\n            &:only-child::before {\n                display: none;\n            }\n            &:only-child {\n                padding-top: 0;\n            }\n            &:first-child::before,\n            &:last-child::after {\n                border: 0 none;\n            }\n            &:last-child::before{\n                border-right: $border-width solid #ccc;\n                border-radius: 0 5px 0 0;\n            }\n            &:first-child::after{\n                border-radius: 5px 0 0 0;\n            }\n        }\n\n        .tree ul ul::before{\n            content: '';\n            position: absolute; \n            top: 0; \n            left: 50%;\n                border-left: $border-width solid #ccc;\n                width: 0; \n            height: 1em;\n        }\n\n        .tree li a {\n            border: $border-width solid #ccc;\n            padding: .5em .75em;\n            text-decoration: none;\n            display: inline-block;\n            border-radius: 5px;\n            color: #333;\n            position: relative;\n            top: $border-width;\n            @if $reverse {\n                transform: rotate(180deg);\n            }\n        }\n\n        .tree li a:hover,\n        .tree li a:hover+ul li a {\n            background: #e9453f;\n            color: #fff;\n            border: $border-width solid #e9453f;\n        }\n\n        .tree li a:hover + ul li::after, \n        .tree li a:hover + ul li::before, \n        .tree li a:hover + ul::before, \n        .tree li a:hover + ul ul::before{\n            border-color:  #e9453f;\n        }\n    </style>\n    <div class=\"tree\">\n        <ul>\n            <li>\n                <a href=\"#\">Parent</a>\n                <ul>\n                <li>\n                    <a href=\"#\">Child</a>\n                    <ul>\n                    <li>\n                        <a href=\"#\">Grand Child</a>\n                    </li><li>\n                        <a href=\"#\">Grand Child</a>\n                        <ul>\n                        <li>\n                            <a href=\"#\">Grand Child</a>\n                        </li><li>\n                            <a href=\"#\">Grand Child</a>\n                        </li>\n                        </ul>\n                    </li>\n                    </ul>\n                </li><li>\n                    <a href=\"#\">Child</a>\n                    <ul>\n                    <li>\n                        <a href=\"#\">Grand Child</a>\n                        <ul>\n                        <li>\n                            <a href=\"#\">Grand Grand Child</a>\n                        </li>\n                        </ul>\n                    </li><li>\n                        <a href=\"#\">Grand Child</a>\n                    </li>\n                    </ul>\n                </li>\n                </ul>\n            </li>\n        </ul>\n    </div>\n    <slot></slot>\n`\n\n// Define the class and make it the default export\n/**\n * @element simple-container\n *\n * fires simple-container:construction - Document object event. evt.details contains the data\n * fires simple-container:connected - When an instance of the component is attached to the DOM. `evt.details` contains the details of the element.\n * fires simple-container:disconnected - When an instance of the component is removed from the DOM. `evt.details` contains the details of the element.\n * fires simple-container:attribChanged - When a watched attribute changes. `evt.details` contains the details of the change.\n * NOTE that listeners can be attached either to the `document` or to the specific element instance.\n *\n * @property {string} name - Optional. Will be used to synthesize an ID if no ID is provided.\n * attr {string} data-* - Optional. All data-* attributes are returned in the _meta prop as a _meta.data object.\n *\n * @slot Container contents\n *\n * @csspart ??? - Uses the uib-styles.css uibuilder master for variables where available.\n */\nexport default class SimpleContainer extends HTMLElement {\n    //#region ---- Class Variables ----\n\n    /** Standard _ui object to include in msgs */\n    _ui = {\n        type: componentName,\n        event: undefined,\n        id: undefined,\n        name: undefined,\n        data: undefined, // All of the data-* attributes as an object\n    }\n\n    /** Mini jQuery-like shadow dom selector (see constructor) */\n    $\n\n    /** Holds the name for this instance of the component */\n    name = undefined\n\n    /** Holds a count of how many instances of this component are on the page */\n    static _iCount = 0\n\n    //#endregion ---- ---- ---- ----\n\n    //#region ---- Utility Functions ----\n\n\n    //#endregion ---- ---- ---- ----\n\n    constructor() {\n\n        super()\n        this.attachShadow({ mode: 'open', delegatesFocus: true, })\n            .append(template.content.cloneNode(true))\n\n        this.$ = this.shadowRoot.querySelector.bind(this.shadowRoot)\n\n        this.dispatchEvent(new Event(`${componentName}:construction`, { bubbles: true, composed: true, }))\n\n    } // ---- end of constructor ----\n\n    // List all attribs we want to observe\n    static get observedAttributes() { return [\n        'name'\n    ] }\n\n    // Runs when an observed attribute changes - Note: values are always strings\n    attributeChangedCallback(name, oldVal, newVal) {\n\n        // Don't bother if the new value same as old\n        if ( oldVal === newVal ) return\n\n        // Create a property from the value - WARN: Be careful with name clashes\n        this[name] = newVal\n\n        this.dispatchEvent(new CustomEvent(`${componentName}:attribChanged`, {\n            bubbles: true,\n            composed: true,\n            detail: {\n                id: this.id,\n                name: this.name,\n                attribute: name,\n                newVal: newVal,\n                oldVal: oldVal,\n            },\n        } ) )\n\n    } // --- end of attributeChangedCallback --- //\n\n    // Runs when an instance is added to the DOM\n    connectedCallback() {\n        ++SimpleContainer._iCount // increment total instance count\n\n        // Create an id from name or calculation if needed\n        this.name = this.getAttribute('name')\n        if (!this.id) {\n            if (this.name) this.id = this.name.toLowerCase().replace(/\\s/g, '_')\n            else this.id = `sc-${SimpleContainer._iCount}`\n        }\n\n        this.dispatchEvent(new CustomEvent(`${componentName}:connected`, {\n            bubbles: true,\n            composed: true,\n            detail: {\n                id: this.id,\n                name: this.name,\n            },\n        } ) )\n\n    } // ---- end of connectedCallback ---- //\n\n    // Runs when an instance is removed from the DOM\n    disconnectedCallback() {\n        // NB: Dont decrement SimpleCard._iCount because that could lead to id nameclashes\n\n        this.dispatchEvent(new CustomEvent(`${componentName}:disconnected`, {\n            bubbles: true,\n            composed: true,\n            detail: {\n                id: this.id,\n                name: this.name,\n            },\n        } ) )\n\n    } // ---- end of disconnectedCallback ---- //\n\n} // ---- end of Class ---- //\n\n/** Self register the class to global\n * Enables new data lists to be dynamically added via JS\n * and lets the static methods be called\n */\nwindow[className] = SimpleContainer\n\n// Self-register the HTML tag\ncustomElements.define(componentName, SimpleContainer)\n"],
  "mappings": "AAgCA,IAAMA,EAAgB,mBAChBC,EAAY,kBAEZC,EAAW,SAAS,cAAc,UAAU,EAElDA,EAAS,UAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsK7B,IAAqBC,EAArB,MAAqBC,UAAwB,WAAY,CAIrD,IAAM,CACF,KAAMJ,EACN,MAAO,OACP,GAAI,OACJ,KAAM,OACN,KAAM,MACV,EAGA,EAGA,KAAO,OAGP,OAAO,QAAU,EASjB,aAAc,CAEV,MAAM,EACN,KAAK,aAAa,CAAE,KAAM,OAAQ,eAAgB,EAAM,CAAC,EACpD,OAAOE,EAAS,QAAQ,UAAU,EAAI,CAAC,EAE5C,KAAK,EAAI,KAAK,WAAW,cAAc,KAAK,KAAK,UAAU,EAE3D,KAAK,cAAc,IAAI,MAAM,GAAGF,CAAa,gBAAiB,CAAE,QAAS,GAAM,SAAU,EAAM,CAAC,CAAC,CAErG,CAGA,WAAW,oBAAqB,CAAE,MAAO,CACrC,MACJ,CAAE,CAGF,yBAAyBK,EAAMC,EAAQC,EAAQ,CAGtCD,IAAWC,IAGhB,KAAKF,CAAI,EAAIE,EAEb,KAAK,cAAc,IAAI,YAAY,GAAGP,CAAa,iBAAkB,CACjE,QAAS,GACT,SAAU,GACV,OAAQ,CACJ,GAAI,KAAK,GACT,KAAM,KAAK,KACX,UAAWK,EACX,OAAQE,EACR,OAAQD,CACZ,CACJ,CAAE,CAAE,EAER,CAGA,mBAAoB,CAChB,EAAEF,EAAgB,QAGlB,KAAK,KAAO,KAAK,aAAa,MAAM,EAC/B,KAAK,KACF,KAAK,KAAM,KAAK,GAAK,KAAK,KAAK,YAAY,EAAE,QAAQ,MAAO,GAAG,EAC9D,KAAK,GAAK,MAAMA,EAAgB,OAAO,IAGhD,KAAK,cAAc,IAAI,YAAY,GAAGJ,CAAa,aAAc,CAC7D,QAAS,GACT,SAAU,GACV,OAAQ,CACJ,GAAI,KAAK,GACT,KAAM,KAAK,IACf,CACJ,CAAE,CAAE,CAER,CAGA,sBAAuB,CAGnB,KAAK,cAAc,IAAI,YAAY,GAAGA,CAAa,gBAAiB,CAChE,QAAS,GACT,SAAU,GACV,OAAQ,CACJ,GAAI,KAAK,GACT,KAAM,KAAK,IACf,CACJ,CAAE,CAAE,CAER,CAEJ,EAMA,OAAOC,CAAS,EAAIE,EAGpB,eAAe,OAAOH,EAAeG,CAAe",
  "names": ["componentName", "className", "template", "SimpleContainer", "_SimpleContainer", "name", "oldVal", "newVal"]
}
