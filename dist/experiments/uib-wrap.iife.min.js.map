{
  "version": 3,
  "sources": ["../../src/experiments/uib-wrap.js"],
  "sourcesContent": ["// @ts-nocheck\n/** Web component for UIBUILDER for Node-RED that lets you wrap around\n *  a 3rd-party JavaScript library to make it responsive to data from Node-RED.\n *\n * See ./docs/uib-wrap.md for detailed documentation on installation and use.\n *\n * version: 0.0.1 2024-01-31\n *\n * TODO: Add custom events to allow processing of updates in the browser\n *\n * See https://github.com/runem/web-component-analyzer#-how-to-document-your-components-using-jsdoc on how to document\n *\n * Use `npx web-component-analyzer ./components/ghost-thermometer.js` to create/update the documentation\n *     or paste into https://runem.github.io/web-component-analyzer/\n * Use `npx web-component-analyzer ./components/*.js --format vscode --outFile ./vscode-descriptors/ti-web-components.html-data.json`\n *     to generate/update vscode custom data files. See https://github.com/microsoft/vscode-custom-data/tree/main/samples/webcomponents\n *\n * To Do:\n * - Use https://tabulator.info as example\n * - Attribs: new, selector, uib-var, uib-topic, lib-name\n */\n/*\n  Copyright (c) 2024 Julian Knight (Totally Information)\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nexport default class UibWrap extends HTMLElement {\n    //#region --- Class Properties ---\n    static componentName = 'uib-wrap'\n    static className = 'UibWrap'\n    /** @type {Array<string>} List of all of the html attribs (props) listened to */\n    static observedAttributes = ['new', 'selector', 'lib-name', 'config-var']\n    /** Shadow DOM Template (if required) */\n    static template = document.createElement('template')\n    new = false\n    libName\n    config\n    selector = 'div' // ':first-child'\n    //#endregion --- Class Properties ---\n\n    // Cannot control the normal DOM here, use connectedCallback\n    constructor() {\n        super()\n\n        // Shadow DOM template (if needed)\n        UibWrap.template.innerHTML = /** @type {HTMLTemplateElement} */ /*html*/`\n        <style>\n            :host {\n                /* display: block;   default is inline */\n                contain: content; /* performance boost */\n            }\n        </style>\n        <slot></slot>\n        `\n        this.attachShadow({ mode: 'open', delegatesFocus: true, })\n            .append(UibWrap.template.content.cloneNode(true))\n        this.$ = this.shadowRoot.querySelector.bind(this.shadowRoot)\n\n        // console.log('construct ended')\n    }\n\n    /** NOTE: On initial startup, this is called for each watched attrib set in HTML - BEFORE connectedCallback is called\n     * @param {string} attrib - The name of the attribute that has changed\n     * @param {string} oldVal - The old value of the attribute\n     * @param {string} newVal - The new value of the attribute\n     */\n    attributeChangedCallback(attrib, oldVal, newVal) {\n        if (oldVal === newVal) return\n        console.log('attributeChangedCallback', attrib, oldVal, newVal)\n\n        switch (attrib) {\n            case 'new': {\n                console.log('new', newVal)\n                try {\n                    newVal = newVal.toLowerCase()\n                } catch (e) {}\n                if (newVal === 'true' || newVal === '' || newVal === true) newVal = true\n                else newVal = false\n                this.new = newVal\n                console.log('new', this.new, newVal)\n                break\n            }\n            case 'config-var': {\n                this.config = newVal\n                // this.args = uibuilder.get(newVal)\n                // if (!Array.isArray(this.args)) this.args = [this.args]\n                // console.log(this.args)\n                break\n            }\n            case 'lib-name': {\n                this.libName = newVal\n                break\n            }\n\n            default: {\n                this[attrib] = newVal\n                break\n            }\n        }\n    } // --- end of attributeChangedCallback --- //\n\n    // Runs when an instance is added to the DOM\n    connectedCallback() {\n        setTimeout(() => {\n            console.log(this.config, window['tbConfig'], window['uibuilder'].tbConfig)\n            // @ts-ignore\n            let args = uibuilder.get(this.config) // eslint-disable-line no-undef\n            if (!Array.isArray(args)) args = [args]\n            console.log(args)\n            this.initialiseLib(args)\n            console.log('connected')\n        }, 100)\n    }\n\n    // Runs when an instance is removed from the DOM\n    // disconnectedCallback() {}\n\n    initialiseLib(args) {\n        // Is the library available?\n        if (!window[this.libName]) throw new Error(`[UibWrap] Library '${this.libName}' not available`)\n        // Is the config variable available?\n\n        // Initialise the library\n        if (this.new === false) {\n            this.fn = window[this.libName](...args)\n        } else {\n            this.fn = new window[this.libName](...args)\n        }\n        // Set up listener\n    }\n}\n\n// Automatically dd the class as a new Custom Element to the window object\nif (!customElements.get(UibWrap.componentName)) customElements.define(UibWrap.componentName, UibWrap)\n"],
  "mappings": "MAqCA,IAAqBA,EAArB,MAAqBC,UAAgB,WAAY,CAE7C,OAAO,cAAgB,WACvB,OAAO,UAAY,UAEnB,OAAO,mBAAqB,CAAC,MAAO,WAAY,WAAY,YAAY,EAExE,OAAO,SAAW,SAAS,cAAc,UAAU,EACnD,IAAM,GACN,QACA,OACA,SAAW,MAIX,aAAc,CACV,MAAM,EAGNA,EAAQ,SAAS,UAAuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UASxE,KAAK,aAAa,CAAE,KAAM,OAAQ,eAAgB,EAAM,CAAC,EACpD,OAAOA,EAAQ,SAAS,QAAQ,UAAU,EAAI,CAAC,EACpD,KAAK,EAAI,KAAK,WAAW,cAAc,KAAK,KAAK,UAAU,CAG/D,CAOA,yBAAyBC,EAAQC,EAAQC,EAAQ,CAC7C,GAAID,IAAWC,EAGf,OAFA,QAAQ,IAAI,2BAA4BF,EAAQC,EAAQC,CAAM,EAEtDF,EAAQ,CACZ,IAAK,MAAO,CACR,QAAQ,IAAI,MAAOE,CAAM,EACzB,GAAI,CACAA,EAASA,EAAO,YAAY,CAChC,MAAY,CAAC,CACTA,IAAW,QAAUA,IAAW,IAAMA,IAAW,GAAMA,EAAS,GAC/DA,EAAS,GACd,KAAK,IAAMA,EACX,QAAQ,IAAI,MAAO,KAAK,IAAKA,CAAM,EACnC,KACJ,CACA,IAAK,aAAc,CACf,KAAK,OAASA,EAId,KACJ,CACA,IAAK,WAAY,CACb,KAAK,QAAUA,EACf,KACJ,CAEA,QAAS,CACL,KAAKF,CAAM,EAAIE,EACf,KACJ,CACJ,CACJ,CAGA,mBAAoB,CAChB,WAAW,IAAM,CACb,QAAQ,IAAI,KAAK,OAAQ,OAAO,SAAa,OAAO,UAAa,QAAQ,EAEzE,IAAIC,EAAO,UAAU,IAAI,KAAK,MAAM,EAC/B,MAAM,QAAQA,CAAI,IAAGA,EAAO,CAACA,CAAI,GACtC,QAAQ,IAAIA,CAAI,EAChB,KAAK,cAAcA,CAAI,EACvB,QAAQ,IAAI,WAAW,CAC3B,EAAG,GAAG,CACV,CAKA,cAAcA,EAAM,CAEhB,GAAI,CAAC,OAAO,KAAK,OAAO,EAAG,MAAM,IAAI,MAAM,sBAAsB,KAAK,OAAO,iBAAiB,EAI1F,KAAK,MAAQ,GACb,KAAK,GAAK,OAAO,KAAK,OAAO,EAAE,GAAGA,CAAI,EAEtC,KAAK,GAAK,IAAI,OAAO,KAAK,OAAO,EAAE,GAAGA,CAAI,CAGlD,CACJ,EAGK,eAAe,IAAIL,EAAQ,aAAa,GAAG,eAAe,OAAOA,EAAQ,cAAeA,CAAO",
  "names": ["UibWrap", "_UibWrap", "attrib", "oldVal", "newVal", "args"]
}
