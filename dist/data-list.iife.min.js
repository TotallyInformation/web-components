(()=>{var x=class f extends HTMLElement{static baseVersion="2025-06-03";static _iCount=0;uib=!!window.uibuilder;uibuilder=window.uibuilder;$;$$;connected=!1;name;opts={};static get version(){return`${this.componentVersion} (Base: ${this.baseVersion})`}constructor(){super()}config(e){return e&&(this.opts=f.deepAssign(this.opts,e)),this.opts}createShadowSelectors(){this.$=this.shadowRoot?.querySelector.bind(this.shadowRoot),this.$$=this.shadowRoot?.querySelectorAll.bind(this.shadowRoot)}static deepAssign(e,...t){for(let n of t)for(let s in n){let o=n[s],r=e[s];if(Object(o)==o&&Object(r)===r){e[s]=f.deepAssign(r,o);continue}e[s]=n[s]}return e}async doInheritStyles(){if(!this.shadowRoot||!this.hasAttribute("inherit-style"))return;let e=this.getAttribute("inherit-style");e||(e="./index.css");let t=document.createElement("link");t.setAttribute("type","text/css"),t.setAttribute("rel","stylesheet"),t.setAttribute("href",e),this.shadowRoot.appendChild(t),console.info(`[${this.localName}] Inherit-style requested. Loading: "${e}"`)}ensureId(){this.uib=!!window.uibuilder,this.id||(this.id=`${this.localName}-${++this.constructor._iCount}`)}prependStylesheet(e,t=0){if(!e)throw new Error(`[${this.localName}] cssText must be provided`);let n=this._findExistingStylesheet();if(n)return n;let s=document.createElement("style");return s.textContent=e,s.setAttribute("data-component",this.localName),s.setAttribute("data-order",t.toString()),this._prependToDocumentHead(s,t),s}uibSend(e,t){this.uib&&(this.uibuilder.ioConnected?this.uibuilder.send({topic:`${this.localName}:${e}`,payload:t,id:this.id,name:this.name}):console.warn(`[${this.localName}] uibuilder not connected to server, cannot send:`,e,t))}_connect(){this.ensureId(),this.doInheritStyles(),this.uib&&this.uibuilder.onTopic(`${this.localName}::${this.id}`,this._uibMsgHandler.bind(this))}_construct(e,t){e&&(t||(t={mode:"open",delegatesFocus:!0}),this.attachShadow(t).append(e),this.createShadowSelectors())}_disconnect(){document.removeEventListener(`uibuilder:msg:_ui:update:${this.id}`,this._uibMsgHandler),this._event("disconnected")}_event(e,t){this.dispatchEvent(new CustomEvent(`${this.localName}:${e}`,{bubbles:!0,composed:!0,detail:{id:this.id,name:this.name,data:t}}))}_ready(){this.connected=!0,this._event("connected"),this._event("ready")}_uibMsgHandler(e){if(typeof e.payload!="object"){console.warn(`[${this.localName}] Ignoring msg, payload is not an object:`,e);return}Object.keys(e.payload).forEach(t=>{t.startsWith("_")||(this[t]=e.payload[t])})}_findExistingStylesheet(){return document.head.querySelector(`style[data-component="${this.localName}"]`)}_prependToDocumentHead(e,t){let n=document.head,s=Array.from(n.querySelectorAll("style[data-component]"));if(s.length===0){let r=n.firstChild;r?n.insertBefore(e,r):n.appendChild(e);return}let o=null;for(let r of s){let i=parseInt(r.getAttribute("data-order")??"0",10);if(t<i){o=r;break}}if(o)n.insertBefore(e,o);else{let i=s[s.length-1].nextSibling;i?n.insertBefore(e,i):n.appendChild(e)}}},y=x;var k=`
    data-list {
        --base-margin: var(--base-margin, 1rem);
        --list-style: disc; /* Default list style type */
        --nested-indent: 40px; /* Default nested list indent - all browsers use 40px by default */
    }
    
    data-list ul {
        list-style: var(--list-style);
    }
    
    /* Nested list indentation */
    data-list ul ul {
        padding-inline-start: var(--nested-indent);
        margin-inline-start: 0;
    }
    
    /* No list bullet on an li containing a nested lists unless the key text is shown */
    data-list .nested-container {
        list-style: none;
    }

    /* #region ---- Checkbox list styles ---- */
    data-list .checkbox-list {
        list-style: none;
        padding-inline-start: 0;
    }

    /* Nested checkbox list indentation */
    data-list .checkbox-list ul {
        padding-inline-start: 1.5em;
        margin-inline-start: 0;
        width: 100%;
        pointer-events: auto; /* Ensure nested lists can receive clicks */
    }

    data-list .checkbox-item {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        padding-block-start: 0.25em;
        padding-block-end: 0.25em;
    }

    data-list .checkbox-item > input[type="checkbox"] {
        flex-shrink: 0;
        min-width: 1.5em;
        z-index: 2; /* Ensure checkbox is above other elements */
    }

    data-list .checkbox-item > .checkbox-label {
        flex: 1;
        cursor: pointer;
        user-select: none;
        margin-left: 0;
        padding-left: 0;
        z-index: 1;
    }

    /* Ensure nested lists don't interfere with label clicks */
    data-list .checkbox-item > .checkbox-label > * {
        pointer-events: none; /* Prevent child elements from intercepting clicks */
    }

    data-list .checkbox-item > ul {
        pointer-events: auto; /* Re-enable pointer events for nested lists */
        z-index: 3; /* Ensure nested lists are above labels */
    }

    /* Focus styles for accessibility */
    data-list .checkbox-item > input[type="checkbox"]:focus {
        outline: 2px solid hsl(220, 90%, 50%);
        outline-offset: 2px;
    }
    data-list .checkbox-item > .checkbox-label:focus {
        outline: 2px solid hsl(220, 90%, 50%);
        outline-offset: 2px;
    }
    /* #endregion ---- Checkbox list styles ---- */
`,b=class extends y{static componentVersion="2025-06-03";#e=null;#i=null;#s=null;#t="ul";#n=!1;listvar=null;keyvalueseparator=" :: ";static get observedAttributes(){return["inherit-style","name","keyvalueseparator","liststyle","listvar","type","topic"]}constructor(){super(),this.prependStylesheet(k,0)}connectedCallback(){if(this._connect(),this.listvar&&window[this.listvar]){window[this.listvar]?this.data=window[this.listvar]:console.warn(`[${this.localName}] ${this.id} window.${this.listvar} does not exist, ignoring.`);return}this._ready()}disconnectedCallback(){this._disconnect()}attributeChangedCallback(e,t,n){t!==n&&(this[e]=n,this._event("attribChanged",{attribute:e,newVal:n,oldVal:t}))}set type(e){["ul","ol"].includes(e)||(console.warn(`[${this.localName}] ${this.id} Invalid type "${e}" specified, defaulting to "ul".`),e="ul"),this.#t=e,this._updateListAttributes(this.#e,this.#t)}get type(){return this.#t}set liststyle(e){if(e==="checkbox")if(this.#i="none",this.#n=!0,this.#e)console.info(`[${this.localName}] ${this.id} List exists. Replacing list with checkboxes`),this.replaceWithCheckboxes();else{console.info(`[${this.localName}] ${this.id} List does not exist yet. Waiting for data to be set before replacing with checkboxes.`);let t=()=>{console.info(`[${this.localName}] ${this.id} Data changed, replacing list with checkboxes`),this.replaceWithCheckboxes(),this.removeEventListener(`${this.localName}:dataChanged`,t)};this.addEventListener(`${this.localName}:dataChanged`,t)}else this.#i=e,this.#n=!1,this._updateListAttributes(this.#e,this.#t)}get liststyle(){return this.#n?"checkbox":this.#i}set data(e){this.#s=e,this.#e&&this.#e.remove(),this._buildList(this.#s,this,this.#t,1),this.#e=this.querySelector("ul"),this._updateListAttributes(this.#e,this.#t),this._event("dataChanged",this.#s)}get data(){return this.#s}entry(e,t){this.#s[e]=t,this.data=this.#s}replaceWithCheckboxes(e=null,t=!1,n=""){let s=e??this.#e;if(!s||s.tagName.toLowerCase()!=="ul")return console.warn(`[${this.localName}] ${this.id} replaceWithCheckboxes: No valid ul element found`),[];let o=[];return s.querySelectorAll(":scope > li").forEach((i,d)=>{if(i.querySelector('input[type="checkbox"]'))return;let h=Array.from(i.children).filter(l=>l.tagName.toLowerCase()==="ul"||l.tagName.toLowerCase()==="ol");h.forEach(l=>l.remove());let c=i.textContent?.trim(),u=i.innerHTML.trim();if(!c||u===""){h.forEach(l=>{i.appendChild(l),l.tagName.toLowerCase()==="ul"&&this.replaceWithCheckboxes(l,t,n)}),i.classList.add("nested-container");return}let a=document.createElement("input");a.type="checkbox",a.checked=t,a.id=`${this.id}-checkbox-${d}`,a.setAttribute("aria-label",`Checkbox for ${c}`),n&&(a.name=n),c&&(a.value=c);let p=document.createElement("label");p.htmlFor=a.id,p.className="checkbox-label",p.innerHTML=u,i.innerHTML="",i.appendChild(a),i.appendChild(p),h.forEach(l=>{i.appendChild(l),l.tagName.toLowerCase()==="ul"&&this.replaceWithCheckboxes(l,t,n)}),i.classList.add("checkbox-item"),a.addEventListener("change",l=>{let m=l.target;this._event("checkboxChanged",{checkbox:m,checked:m.checked,value:m.value,index:d,listItem:i})}),o.push(a)}),s.style.setProperty("--list-style","none"),s.classList.add("checkbox-list"),this.#n=!0,this._event("checkboxesCreated",{list:s,checkboxes:o,count:o.length}),o}removeCheckboxes(e=null){let t=e||this.#e;if(!t)return console.warn(`[${this.localName}] ${this.id} removeCheckboxes: No list element found`),0;t.querySelectorAll("ul.checkbox-list").forEach(i=>{this.removeCheckboxes(i)});let s=t.querySelectorAll(":scope > .checkbox-item"),o=t.querySelectorAll(":scope > .nested-container"),r=0;return s.forEach(i=>{let d=i.querySelector('input[type="checkbox"]'),h=i.querySelector(".checkbox-label");if(d&&h){let c=Array.from(i.children).filter(a=>(a.tagName.toLowerCase()==="ul"||a.tagName.toLowerCase()==="ol")&&a!==d&&a!==h),u=h.innerHTML;c.length>0&&c.forEach(a=>{u+=a.outerHTML}),i.innerHTML=u,i.classList.remove("checkbox-item"),r++}}),o.forEach(i=>{i.classList.remove("nested-container")}),t.style.removeProperty("--list-style"),t.classList.remove("checkbox-list"),t===this.#e&&(this.#n=!1),this._updateListAttributes(t,this.#t),this._event("checkboxesRemoved",{list:t,removedCount:r}),r}getCheckboxStates(e=null){let t=e||this.#e;if(!t)return console.warn(`[${this.localName}] ${this.id} getCheckboxStates: No list element found`),[];let n=t.querySelectorAll('input[type="checkbox"]');return Array.from(n).map((s,o)=>({checkbox:s,checked:s.checked,value:s.value,index:o}))}setCheckboxStates(e,t,n=null){let s=n||this.#e;if(!s)return console.warn(`[${this.localName}] ${this.id} setCheckboxStates: No list element found`),0;let o=s.querySelectorAll('input[type="checkbox"]'),r=0;return e==="all"?o.forEach(i=>{i.checked=t,r++}):Array.isArray(e)&&e.forEach(i=>{i>=0&&i<o.length&&(o[i].checked=t,r++)}),this._event("checkboxStatesUpdated",{list:s,updatedCount:r,checked:t,indices:e}),r}_buildList(e,t,n,s){s===void 0&&(s=1);let o=document.createElement("ul");s>1&&(o.classList.add("nested-list"),o.setAttribute("data-depth",s.toString())),Object.entries(e).forEach(([r,i],d)=>{let h=!isNaN(parseInt(r));if(typeof i=="object"&&i!==null){if(s>3){o.insertAdjacentHTML("beforeend",this._buildLIhtml({arrayType:Array.isArray(e),key:r,value:JSON.stringify(i),i:d})),console.warn(`[${this.localName}] ${this.id} buildList: Depth limit reached for key "${r}", showing as string.`);return}let c=document.createElement("li");if(!h&&this.keyvalueseparator!=="NULL"){let u=document.createElement("span");u.textContent=`${r}${this.keyvalueseparator}`,c.appendChild(u)}else c.classList.add("nested-container");this._buildList(i,c,n,++s),this._updateListAttributes(c,n),o.appendChild(c)}else o.insertAdjacentHTML("beforeend",this._buildLIhtml({arrayType:Array.isArray(e),key:r,value:i,i:d}))}),t.appendChild(o)}_buildLIhtml({arrayType:e,key:t,value:n,i:s}){return e?`<li id="${this.id}-${t}" data-index="${s}">${n}</li>`:`<li id="${this.id}-${t}" data-index="${s}">${this.keyvalueseparator==="NULL"?"":`${t}${this.keyvalueseparator}`}${n}</li>`}_updateListAttributes(e,t){e&&(e&&(e.setAttribute("data-list-type",t),t==="ol"?(this.listStyle="decimal",e.setAttribute("aria-label","Ordered list")):(this.listStyle="disc",e.setAttribute("aria-label","Unordered list"))),this.#i&&e.style.setProperty("--list-style",this.#i))}},C=b;window.DataList=b;customElements.define("data-list",b);})();
//# sourceMappingURL=data-list.iife.min.js.map
