var a=class o extends HTMLElement{static baseVersion="2025-01-11";static _iCount=0;uib=!!window.uibuilder;uibuilder=window.uibuilder;$;$$;connected=!1;name;opts={};static get version(){return`${this.componentVersion} (Base: ${this.baseVersion})`}constructor(){super()}async doInheritStyles(){if(!this.hasAttribute("inherit-style"))return;let t=this.getAttribute("inherit-style");t||(t="./index.css");let e=document.createElement("link");e.setAttribute("type","text/css"),e.setAttribute("rel","stylesheet"),e.setAttribute("href",t),this.shadowRoot.appendChild(e),console.info(`[${this.localName}] Inherit-style requested. Loading: "${t}"`)}config(t){return t&&(this.opts=o.deepAssign(this.opts,t)),this.opts}static deepAssign(t,...e){for(let i of e)for(let s in i){let n=i[s],r=t[s];if(Object(n)==n&&Object(r)===r){t[s]=o.deepAssign(r,n);continue}t[s]=i[s]}return t}ensureId(){this.uib=!!window.uibuilder,this.id||(this.id=`${this.localName}-${++this.constructor._iCount}`)}createShadowSelectors(){this.$=this.shadowRoot?.querySelector.bind(this.shadowRoot),this.$$=this.shadowRoot?.querySelectorAll.bind(this.shadowRoot)}_uibMsgHandler(t){}_event(t,e){this.dispatchEvent(new CustomEvent(`${this.localName}:${t}`,{bubbles:!0,composed:!0,detail:{id:this.id,name:this.name,data:e}}))}uibSend(t,e){this.uib&&this.uibuilder.send({topic:`${this.localName}:${t}`,payload:e,id:this.id,name:this.name})}_construct(t,e){e||(e={mode:"open",delegatesFocus:!0}),this.attachShadow(e).append(t),this.createShadowSelectors()}_connect(){this.ensureId(),this.doInheritStyles()}_disconnect(){document.removeEventListener(`uibuilder:msg:_ui:update:${this.id}`,this._uibMsgHandler),this._event("disconnected")}_ready(){this.connected=!0,this._event("connected"),this._event("ready")}},u=a;var d=document.createElement("template");d.innerHTML=`
    <style>
        :host {
            --label-before: '';
            --label-after: ':';
            --output-before: '';
            --output-after: '';
            --width: 100%;
            --label-flex: 1;
            --output-flex: 1;
            --label-align: left;
            --output-align: right;
            --label-font: '';
            --output-font: '';

            display: flex;   /* default is inline */
            contain: content; /* performance boost */
            flex-flow: row nowrap;
            width: var(--width);
            flex-direction: row;
        }
        label {
            flex-grow: var(--label-flex);
            flex-shrink: var(--label-flex);
            text-align: var(--label-align);
            font: var(--label-font);
        }
        label::before {
            content: var(--label-before);
        }
        label::after {
            content: var(--label-after);
        }
        output {
            flex-grow: var(--output-flex);
            flex-shrink: var(--output-flex);
            text-align: var(--output-align);
            font: var(--output-font);
        }
        output::before {
            content: var(--output-before);
        }
        output::after {
            content: var(--output-after);
        }
        /* Small screen (37.5em @ 16pt is about 600px) */
        @media all and (max-width: 37.5em) {
            :host {
                /* On small screens, we are no longer using row direction but column */
                flex-direction: column;
                --output-align: var(--label-align);
            }
        }
    </style>
    <!--<div id="label"></div>-->
    <!--<div id="value" class="value" aria-labelledby="label"></div>-->
    <label></label>
    <output></output>
    <div><slot></slot></div>
`;var l=class extends u{static componentVersion="2024-10-06";static get observedAttributes(){return["inherit-style","name","label","value"]}#t=void 0;#e=void 0;#i;#s;#l;"keep-slot";set value(t){t!==null&&t!==this.#e&&(this.#e=t,this.#s.textContent=t,this.setAttribute("value",t))}get value(){return this.#e}set label(t){t!==null&&t!==this.#t&&(this.#t=t,this.#i.textContent=t)}get label(){return this.#t}constructor(){super(),this._construct(d.content.cloneNode(!0)),this.#s=this.shadowRoot.querySelector("output"),this.#i=this.shadowRoot.querySelector("label"),this.#l=this.shadowRoot.querySelector("slot")}connectedCallback(){this._connect(),this["keep-slot"]=this.getAttribute("keep-slot"),this.label=this.getAttribute("label"),this.value=this.getAttribute("value"),this._ready()}disconnectedCallback(){this._disconnect()}attributeChangedCallback(t,e,i){this.connected&&e!==i&&(this[t]=i,this._event("attribChanged",{attribute:t,newVal:i,oldVal:e}))}},b=l;window.LabelledValue=l;customElements.define("labelled-value",l);export{b as default};
//# sourceMappingURL=labelled-value.esm.min.js.map
