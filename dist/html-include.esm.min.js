var a=class r extends HTMLElement{static baseVersion="2024-10-06";static _iCount=0;uib=!!window.uibuilder;$;$$;connected=!1;name;opts={};static get version(){return`${this.componentVersion} (Base: ${this.baseVersion})`}constructor(){super()}async doInheritStyles(){if(!this.hasAttribute("inherit-style"))return;let t=this.getAttribute("inherit-style");t||(t="./index.css");let e=document.createElement("link");e.setAttribute("type","text/css"),e.setAttribute("rel","stylesheet"),e.setAttribute("href",t),this.shadowRoot.appendChild(e),console.info(`[${this.localName}] Inherit-style requested. Loading: "${t}"`)}config(t){return t&&(this.opts=r.deepAssign(this.opts,t)),this.opts}static deepAssign(t,...e){for(let s of e)for(let i in s){let n=s[i],h=t[i];if(Object(n)==n&&Object(h)===h){t[i]=r.deepAssign(h,n);continue}t[i]=s[i]}return t}ensureId(){this.uib=!!window.uibuilder,this.id||(this.id=`${this.localName}-${++this.constructor._iCount}`)}createShadowSelectors(){this.$=this.shadowRoot?.querySelector.bind(this.shadowRoot),this.$$=this.shadowRoot?.querySelectorAll.bind(this.shadowRoot)}_uibMsgHandler(t){}_event(t,e){this.dispatchEvent(new CustomEvent(`${this.localName}:${t}`,{bubbles:!0,composed:!0,detail:{id:this.id,name:this.name,data:e}}))}_construct(t,e){e||(e={mode:"open",delegatesFocus:!0}),this.attachShadow(e).append(t),this.createShadowSelectors()}_connect(){this.ensureId(),this.doInheritStyles()}_disconnect(){document.removeEventListener(`uibuilder:msg:_ui:update:${this.id}`,this._uibMsgHandler),this._event("disconnected")}_ready(){this.connected=!0,this._event("connected"),this._event("ready")}},d=a;var c=document.createElement("template");c.innerHTML=`
    <style>
        :host {
            display: block;   /* default is inline */
            contain: content; /* performance boost */
        }
    </style>
    <slot></slot>
    <inner-load></inner-load>
`;var o=class extends d{static componentVersion="2024-10-06";static get observedAttributes(){return["inherit-style","name","src"]}contentType="text";text="";json={};get src(){return this.getAttribute("src")}set src(t){this.setAttribute("src",t)}constructor(){super(),this.attachShadow({mode:"open",delegatesFocus:!0}).append(c.content.cloneNode(!0)),this.createShadowSelectors()}connectedCallback(){this.ensureId(),this.doInheritStyles(),this.uib&&document.addEventListener(`uibuilder:msg:_ui:update:${this.id}`,this._uibMsgHandler.bind(this)),this._event("connected"),this._event("ready")}disconnectedCallback(){document.removeEventListener(`uibuilder:msg:_ui:update:${this.id}`,this._uibMsgHandler),this._event("disconnected")}attributeChangedCallback(t,e,s){e!==s&&(t==="src"&&(s?this.doInclude(s):console.error("[html-include] src attribute cannot be empty.")),this._event("attribChanged",{attribute:t,newVal:s,oldVal:e}))}async doInclude(t){if(!t){console.error("[html-include] Cannot fetch empty string.");return}let e=await fetch(t);if(!e.ok)throw new Error(`[html-include] Fetch of url "${t}" failed: ${e.statusText}`);let s=e.headers.get("content-type");switch(s&&(s.includes("text/html")?this.contentType="html":s.includes("application/json")?this.contentType="json":s.includes("multipart/form-data")?this.contentType="form":this.contentType="text"),this.contentType){case"html":{this.json={},this.text=await e.text();let n=new DOMParser().parseFromString(this.text,"text/html");this.shadowRoot.removeChild(this.shadowRoot.lastElementChild),this.shadowRoot.appendChild(n.body);break}case"json":{this.json=await e.json(),this.text=JSON.stringify(this.json,null,4),this.shadowRoot.removeChild(this.shadowRoot.lastElementChild);let i=document.createElement("pre");i.textContent=this.text,this.shadowRoot.appendChild(i);break}case"form":{this.json=await e.formData(),this.text=JSON.stringify(this.json),this.shadowRoot.removeChild(this.shadowRoot.lastElementChild),this.shadowRoot.append(this.text);break}case"text":default:{this.json={},this.text=await e.text(),this.shadowRoot.append(this.text);break}}}},m=o;window.HtmlInclude=o;customElements.define("html-include",o);export{m as default};
//# sourceMappingURL=html-include.esm.min.js.map
