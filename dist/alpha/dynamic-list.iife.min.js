(()=>{var a=document.createElement("template");a.innerHTML=`
    <div>List items:</div>
    <ul></ul>
`;var n=0,r={},s=class extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open",delegatesFocus:!0}).append(a.content.cloneNode(!0)),this._list=this.shadowRoot.querySelector("ul"),this._entries={}}set data(t){this._entries=t,this._list.innerHTML="",Object.keys(this._entries).forEach((i,e)=>{this._list.insertAdjacentHTML("beforeend",`<li id="${i}">${i} :: ${this._entries[i]}</li>`)})}get data(){return this._entries}entry(t,i){this._entries[t]=i,this.data=this._entries;let e=this.shadowRoot.getElementById(t);console.log(">> li key >>",e)}static get instances(){return n}getInstance(t){return r[t]}static get observedAttributes(){return["listvar","type"]}attributeChangedCallback(t,i,e){if(i!==e){if(t==="listvar"&&window[e]){window[e]?this.data=window[e]:console.error(`[DataList] window.${e} does not exist, ignoring.`);return}this[t]=e}}connectedCallback(){if(n++,!this.id){let t=this.getAttribute("name");t?this.id=t.replaceAll(" ","_"):this.id=`dataList${n}`}r[this.id]=this}disconnectedCallback(){n--,delete r[this.id]}};window.DataList=s;customElements.define("data-list",s);})();
//# sourceMappingURL=dynamic-list.iife.min.js.map
