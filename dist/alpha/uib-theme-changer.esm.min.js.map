{
  "version": 3,
  "sources": ["../../src/alpha/uib-theme-changer.js"],
  "sourcesContent": ["/** Define a new zero dependency custom web component ECMA module that can be used as an HTML tag\n *\n * TODO:\n *   - Compact layout\n *   - Other attribs for controlling scheme, etc\n *   - Settings for accessibility\n *   - Reset button\n *   - Move event handlers to fns and remove them on disconnect\n *   - Add inbound uibuilder msg handler\n *   - Add hidden attrib to allow for just msg handling\n *   - Update documentation\n *\n * @version See the class code\n *\n * References:\n *   - https://web.dev/building-a-color-scheme/\n *\n * See https://github.com/runem/web-component-analyzer#-how-to-document-your-components-using-jsdoc on how to document\n * Use `npx web-component-analyzer ./components/button-send.js` to create/update the documentation\n *     or paste into https://runem.github.io/web-component-analyzer/\n * Use `npx web-component-analyzer ./components/*.js --format vscode --outFile ./vscode-descriptors/ti-web-components.html-data.json`\n *     to generate/update vscode custom data files. See https://github.com/microsoft/vscode-custom-data/tree/main/samples/webcomponents\n *\n **/\n/** Copyright (c) 2022-2024 Julian Knight (Totally Information)\n * https://it.knightnet.org.uk, https://github.com/TotallyInformation\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n **/\n\nconst componentName = 'uib-theme-changer'\nconst className = 'UibThemeChanger'\n\nconst template = document.createElement('template')\ntemplate.innerHTML = /*html*/`\n    <style>\n        :host {\n            --size: 2rem;\n            --w: 4rem;\n            /* display: flex; */\n            display: inline-block; /* default is inline */\n            contain: content; /* performance boost */\n            position: sticky;\n            top: 0;\n            background-color: var(--surface1);\n            border: 1px solid var(--text3);\n            border-radius: 0.5rem;\n            margin: 0.2rem;\n            padding: 0.5rem;\n            color: var(--text2);\n            background-clip: border-box;\n            box-sizing: border-box;\n            box-shadow: var(--shadow2);\n            width: 100%;\n        }\n        * {\n            vertical-align: top;\n        }\n        div {\n            display: inline-block;\n        }\n        form {\n            margin: .2rem 1rem;\n            /* flex: 1 0 auto; */\n            display: inline-block;\n        }\n        form > div {\n            display: block;\n        }\n        .s-and-m {\n            aspect-ratio: 1;\n            background: none;\n            color: var(--text3);\n            border: none;\n            padding: 0;\n            inline-size: var(--size);\n            block-size: var(--size);\n            \n            border-radius: 50%;\n\n            cursor: pointer;\n            touch-action: manipulation;\n            -webkit-tap-highlight-color: transparent;\n            outline-offset: 5px;\n        }\n        input[type=submit] {\n            inline-size: var(--w);\n            block-size: var(--size);\n            margin-left: 1rem;\n        }\n        .sun-and-moon {\n            inline-size: 100%;\n            block-size: 100%;\n            stroke-linecap: round;\n        }\n        .moon, .sun {\n            fill: var(--text2);\n        }\n        .moon:hover, .sun:hover {\n            fill: var(--text1);\n        }\n\n        /* @media (hover: none) {\n            :host {\n                --size: 48px;\n                --w: 48px;\n            }\n        } */\n    </style>\n    <div id=\"s-and-m\" name=\"color-scheme-toggle\" onclick=\"this.getRootNode().host.evtClickToggle(event)\" \n            title=\"Toggles between light & dark color schemes\" \n            aria-label=\"auto\" aria-live=\"polite\">\n        <svg class=\"sun-and-moon\" aria-hidden=\"true\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n            <svg name=\"sun\" class=\"sun\" viewbox=\"0 0 20 20\">\n                <path\n                    fill-rule=\"evenodd\"\n                    d=\"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\"\n                    clip-rule=\"evenodd\"\n                ></path>\n            </svg>\n            <svg name=\"moon\" class=\"moon\" viewbox=\"0 0 20 20\">\n                <path\n                    d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\"\n                ></path>\n            </svg>\n            <svg class=\"divider\" width='100%' height='100%' viewBox='0 0 20 20' preserveAspectRatio='none'>\n                <line x1=\"5\" y1=\"5\" x2=\"15\" y2=\"15\" vector-effect=\"non-scaling-stroke\" \n                    stroke-width=\"10%\" stroke=\"currentColor\" />\n            </svg>\n        </svg>\n    </div>\n    <input type=\"submit\" value=\"Reset\" onclick=\"this.getRootNode().host.evtClickReset(event)\">\n    <form>\n        <div name=\"color-scheme-choose\" onclick=\"this.getRootNode().host.evtClickChooser(event)\">\n            <b>Color scheme:</b>\n            <label><input type=\"radio\" name=\"input-color-scheme-choose\" value=\"auto\">&nbsp;auto</label>\n            <label><input type=\"radio\" name=\"input-color-scheme-choose\" value=\"light\">&nbsp;light</label>\n            <label><input type=\"radio\" name=\"input-color-scheme-choose\" value=\"dark\">&nbsp;dark</label>\n        </div>\n        \n        <div onclick=\"this.getRootNode().host.evtClickContrast(event)\">\n            <b>Contrast:</b>\n            <label><input type=\"radio\" name=\"contrast\" value=\"standard\">&nbsp;standard</label>\n            <label><input type=\"radio\" name=\"contrast\" value=\"more\">&nbsp;more</label>\n            <label><input type=\"radio\" name=\"contrast\" value=\"less\">&nbsp;less</label>\n        </div>\n    \n        <div>\n            <label><b>Brand Hue angle:</b>\n            <input name=\"brand-hue\" type=\"range\" min=\"0\" max=\"360\" step=\"1\" value=\"200\">\n            <output>200</output></label>\n        </div>\n\n        <div title=\"30=Split Complementary, 60=Triadic, 150=Complementary\">\n            <label><b>Accent offset angle</b>\n            <input name=\"accent-offset\" type=\"range\" min=\"0\" max=\"360\" step=\"1\" value=\"30\">\n            <output>30</output></label>\n        </div>\n    </form>\n`\n\n/** Namespace\n * @namespace Alpha\n */\n\n/** A uibuilder for Node-RED Theme Changer component\n * @class\n * @augments HTMLElement\n * @description Define a new zero dependency custom web component ECMA module that can be used as an HTML tag\n *\n * @element component-template\n * @memberOf Alpha\n *\n *\n * @element uib-theme-changer\n *\n * @fires uib-theme-changer:construction - Document object event. evt.details contains the data\n * @fires uib-theme-changer:connected - When an instance of the component is attached to the DOM. `evt.details` contains the details of the element.\n * @fires uib-theme-changer:disconnected - When an instance of the component is removed from the DOM. `evt.details` contains the details of the element.\n * @fires uib-theme-changer:attribChanged - When a watched attribute changes. `evt.details` contains the details of the change.\n * NOTE that listeners can be attached either to the `document` or to the specific element instance.\n *\n * @property {string} name - Optional. Will be used to synthesize an ID if no ID is provided.\n * attr {string} data-* - Optional. All data-* attributes are returned in the _meta prop as a _meta.data object.\n *\n * @property {string} name - Sync'd from name attribute\n *\n * slot Container contents\n *\n * @csspart ??? - Uses the uib-styles.css uibuilder master for variables where available.\n */\nclass UibThemeChanger extends HTMLElement {\n    /** Component version */\n    static version = '2024-09-21'\n\n    //#region ---- Class Variables ----\n\n    /** Is UIBUILDER for Node-RED loaded? */\n    uib = !!window['uibuilder']\n    /** Mini jQuery-like shadow dom selector (see constructor)\n     * @type {function(string): Element}\n     * @param {string} selector - A CSS selector to match the element within the shadow DOM.\n     * @returns {Element} The first element that matches the specified selector.\n     */\n    $\n    /** Mini jQuery-like shadow dom multi-selector (see constructor)\n     * @type {function(string): NodeList}\n     * @param {string} selector - A CSS selector to match the element within the shadow DOM.\n     * @returns {NodeList} A STATIC list of all shadow dom elements that match the selector.\n     */\n    $$\n    /** Holds a count of how many instances of this component are on the page that don't have their own id\n     * Used to ensure a unique id if needing to add one dynamically\n     */\n    static _iCount = 0\n\n    /** Runtime configuration settings */\n    opts = {}\n\n\n    /** Makes HTML attribute change watched\n     * @returns {Array<string>} List of all of the html attribs (props) listened to\n     */\n    static get observedAttributes() {\n        return [\n            // Standard watched attributes:\n            'inherit-style',\n            // Other watched attributes:\n        ]\n    }\n\n    /** Report the current component version string */\n    get version() {\n        return UibThemeChanger.version\n    }\n\n    /** Holds the uib theme settings for all pages in this domain (from/to localStorage) */\n    uibThemeSettings = {}\n\n    /** Standard _ui object to include in msgs */\n    _ui = {\n        type: componentName,\n        event: undefined,\n        id: undefined,\n        name: undefined,\n        data: undefined, // All of the data-* attributes as an object\n    }\n\n    /** What is the current scheme? 'light', 'dark' or 'auto' */\n    scheme = undefined\n\n    //#endregion ---- ---- ---- ----\n\n    /** NB: Attributes not available here - use connectedCallback to reference */\n    constructor() {\n        super()\n\n        this.attachShadow({ mode: 'open', delegatesFocus: true })\n            // Only append the template if code and style isolation is needed\n            .append(template.content.cloneNode(true))\n\n        // jQuery-like selectors but for the shadow. NB: Returns are STATIC not dynamic lists\n        this.$ = this.shadowRoot?.querySelector.bind(this.shadowRoot)\n        this.$$ = this.shadowRoot?.querySelectorAll.bind(this.shadowRoot)\n    }\n\n    /** Runs when an instance is added to the DOM */\n    connectedCallback() {\n        // Make sure instance has an ID. Create an id from name or calculation if needed\n        if (!this.id) {\n            if (!this.name) this.name = this.getAttribute('name')\n            if (this.name) this.id = this.name.toLowerCase().replace(/\\s/g, '_')\n            else this.id = `uib-meta-${++UibThemeChanger._iCount}`\n        }\n\n        // Check again if UIBUILDER for Node-RED is loaded\n        this.uib = !!window['uibuilder']\n\n        // Apply parent styles from a stylesheet if required - only required if using an applied template\n        if (this.hasAttribute('inherit-style')) {\n            const styleUrl = this.getAttribute('inherit-style')\n            this.doInheritStyles(styleUrl)\n        }\n\n        if ( !getComputedStyle(this).getPropertyValue('--uib-css').includes('uib-brand') ) {\n            console.warn('[uib-theme-changer] WARNING: It appears that you are not using uibuilder\\'s uib-brand.css stylesheet. This component may not work as expected.')\n        }\n\n        // Try to retrieve theme settings for this page\n        try {\n            this.uibThemeSettings = JSON.parse(localStorage.getItem('uibThemeSettings')) || this.uibThemeSettings\n        } catch (e) {}\n        if ( !this.uibThemeSettings[window.location.pathname] ) this.uibThemeSettings[window.location.pathname] = {}\n\n        const docRoot = document.documentElement\n\n        // TODO: Replace fns with named fns so that listeners can be removed\n        this.$('[name=brand-hue]').addEventListener('change', function(evt) {\n            docRoot.style.setProperty('--brand-hue', evt.target.value)\n        })\n        this.$('[name=brand-hue]').addEventListener('input', function(evt) {\n            this.nextElementSibling.value = this.value\n        })\n\n        this.$('[name=accent-offset]').addEventListener('change', function(evt) {\n            docRoot.style.setProperty('--accent-offset', evt.target.value)\n        })\n        this.$('[name=accent-offset]').addEventListener('input', function(evt) {\n            this.nextElementSibling.value = this.value\n        })\n\n        //#region --- set contrast ---\n\n        // If contrast is manually set, remove saved setting for this page (not needed)\n        if ( docRoot.classList.contains('standard') || docRoot.classList.contains('more')  || docRoot.classList.contains('less')) {\n            try {\n                delete this.uibThemeSettings[window.location.pathname].contrast\n                localStorage.setItem('uibThemeSettings', JSON.stringify(this.uibThemeSettings))\n            } catch (e) {}\n            this.shadowRoot.querySelector(`input[value=${docRoot.classList[0]}][name=contrast]`).checked = true\n        } else if ( this.uibThemeSettings[window.location.pathname] && this.uibThemeSettings[window.location.pathname].contrast ) {\n            // not manually set but does have a saved page setting\n            this.shadowRoot.querySelector(`input[value=${this.uibThemeSettings[window.location.pathname].contrast}][name=contrast]`).checked = true\n            this.evtClickContrast({ target: { name: 'contrast', value: this.uibThemeSettings[window.location.pathname].contrast } })\n        } else {\n            this.shadowRoot.querySelector('input[value=standard][name=contrast]').checked = true\n        }\n\n        //#endregion --- --- ---\n\n        //#region --- set theme ---\n\n        // If theme is manually set, remove saved setting for this page (not needed)\n        if ( docRoot.classList.contains('light') || docRoot.classList.contains('dark')  || docRoot.classList.contains('auto')) {\n            try {\n                delete this.uibThemeSettings[window.location.pathname].theme\n                localStorage.setItem('uibThemeSettings', JSON.stringify(this.uibThemeSettings))\n            } catch (e) {}\n            this.shadowRoot.querySelector(`input[value=${docRoot.classList[0]}][name=input-color-scheme-choose]`).checked = true\n        } else if ( this.uibThemeSettings[window.location.pathname] && this.uibThemeSettings[window.location.pathname].theme ) {\n            // not manually set but does have a saved page setting\n            this.shadowRoot.querySelector(`input[value=${this.uibThemeSettings[window.location.pathname].theme}][name=input-color-scheme-choose]`).checked = true\n            this.setTheme(this.uibThemeSettings[window.location.pathname].theme)\n        } else {\n            this.shadowRoot.querySelector('input[value=auto][name=input-color-scheme-choose]').checked = true\n        }\n\n        //#endregion --- --- ---\n\n        // OPTIONAL. Listen for a uibuilder msg that is targetted at this instance of the component\n        if (this.uib) document.addEventListener(`uibuilder:msg:_ui:update:${this.id}`, this._uibMsgHandler.bind(this) )\n\n        // Keep at end. Let everyone know that a new instance of the component has been connected\n        this.dispatchEvent(new CustomEvent('uib-theme-changer:connected', {\n            bubbles: true,\n            composed: true,\n            detail: {\n                id: this.id,\n                name: this.name\n            },\n        } ) )\n    }\n\n    /** Runs when an instance is removed from the DOM */\n    disconnectedCallback() {\n        // @ts-ignore Remove optional uibuilder event listener\n        document.removeEventListener(`uibuilder:msg:_ui:update:${this.id}`, this._uibMsgHandler )\n\n        // Keep at end. Let everyone know that an instance of the component has been disconnected\n        this.dispatchEvent(new CustomEvent('uib-theme-changer:disconnected', {\n            bubbles: true,\n            composed: true,\n            detail: {\n                id: this.id,\n                name: this.name\n            },\n        } ) )\n    }\n\n    /** Runs when an observed attribute changes - Note: values are always strings\n     * @param {string} attrib Name of watched attribute that has changed\n     * @param {string} oldVal The previous attribute value\n     * @param {string} newVal The new attribute value\n     */\n    attributeChangedCallback(attrib, oldVal, newVal) {\n        // Don't bother if the new value same as old\n        if (oldVal === newVal) return\n        // Create a property from the value - WARN: Be careful with name clashes\n        this[attrib] = newVal\n\n        // Add other dynamic attribute processing here.\n        // If attribute processing doesn't need to be dynamic, process in connectedCallback as that happens earlier in the lifecycle\n\n        // Keep at end. Let everyone know that an attribute has changed for this instance of the component\n        document.dispatchEvent(new CustomEvent('uib-theme-changer:attribChanged', {\n            bubbles: true,\n            composed: true,\n            detail: {\n                id: this.id,\n                name: this.name,\n                attribute: attrib,\n                newVal: newVal,\n                oldVal: oldVal,\n            }\n        }))\n    }\n\n    /** Optionally apply an external linked style sheet (called from connectedCallback)\n     * @param {*} url The URL for the linked style sheet\n     */\n    async doInheritStyles(url) {\n        if (!url) url = './index.css'\n\n        const linkEl = document.createElement('link')\n        linkEl.setAttribute('type', 'text/css')\n        linkEl.setAttribute('rel', 'stylesheet')\n        linkEl.setAttribute('href', url)\n        // @ts-ignore\n        this.shadowRoot.appendChild(linkEl)\n\n        console.info(`[state-timeline] Inherit style requested. Loading: \"${url}\"`)\n    }\n\n    /** OPTIONAL. Update runtime configuration, return complete config\n     * @param {object|undefined} config If present, partial or full set of options. If undefined, fn returns the current full option settings\n     */\n    config(config) {\n        // Merge config but ensure that default states always present\n        // if (config) this.opts = { ...this.opts, ...config }\n        if (config) this.opts = UibThemeChanger.deepAssign(this.opts, config)\n        return this.opts\n    }\n\n    /** Utility object deep merge fn\n     * @param {object} target Merge target object\n     * @param  {...object} sources 1 or more source objects to merge\n     * @returns {object} Deep merged object\n     */\n    static deepAssign(target, ...sources) {\n        for (let source of sources) { // eslint-disable-line prefer-const\n            for (let k in source) { // eslint-disable-line prefer-const\n                const vs = source[k]\n                const vt = target[k]\n                if (Object(vs) == vs && Object(vt) === vt) { // eslint-disable-line eqeqeq\n                    target[k] = UibThemeChanger.deepAssign(vt, vs)\n                    continue\n                }\n                target[k] = source[k]\n            }\n        }\n        return target\n    }\n\n    /** Handle a `uibuilder:msg:_ui:update:${this.id}` custom event\n     * @param {CustomEvent} evt uibuilder `uibuilder:msg:_ui:update:${this.id}` custom event evt.details contains the data\n     */\n    _uibMsgHandler(evt) {\n        // If there is a payload, we want to replace the slot - easiest done from the light DOM\n        // if ( evt['detail'].payload ) {\n        //     const el = document.getElementById(this.id)\n        //     el.innerHTML = evt['detail'].payload\n        // }\n        // If there is a payload, we want to replace the VALUE\n        // if ( evt['detail'].payload ) {\n        //     const el = this.shadowRoot.getElementById('value')\n        //     el.innerHTML = evt['detail'].payload\n        // }\n    }\n\n    /**\n     * \n     * @param {*} theme \n     * @returns \n     */\n    setTheme(theme) {\n        const $ = this.shadowRoot.querySelector.bind(this.shadowRoot)\n        const docRoot = document.documentElement\n        switch (theme) {\n            case 'dark': {\n                this.scheme = 'dark'\n                docRoot.classList.remove('light')\n                docRoot.classList.add('dark')\n                $('.sun').style.opacity = 0\n                $('.moon').style.opacity = 1\n                $('.divider').style.opacity = 0\n                break\n            }\n            case 'light': {\n                this.scheme = 'light'\n                docRoot.classList.remove('dark')\n                docRoot.classList.add('light')\n                $('.sun').style.opacity = 1\n                $('.moon').style.opacity = 0\n                $('.divider').style.opacity = 0\n                break\n            }\n            case 'auto': {\n                this.scheme = 'auto'\n                docRoot.classList.remove('light')\n                docRoot.classList.remove('dark')\n                $('.sun').style.opacity = 1\n                $('.moon').style.opacity = 1\n                $('.divider').style.opacity = 1\n                break\n            }\n            case 'none':\n            default: {\n                this.scheme = undefined\n                docRoot.classList.remove('light')\n                docRoot.classList.remove('dark')\n                docRoot.classList.remove('auto')\n                $('.sun').style.opacity = 1\n                $('.moon').style.opacity = 1\n                $('.divider').style.opacity = 1\n                break\n            }\n        }\n        return theme\n    }\n\n    /** TODO Handle the icon\n     * @param {MouseEvent} evt\n     */\n    evtClickToggle(evt) {\n        console.log('icon click: ', evt.target.tagName)\n    }\n\n    /** Handle the light/dark theme chooser. Override contrast css variables and set appropriate class on html\n     * @param {MouseEvent} evt\n     */\n    evtClickChooser(evt) {\n        if (evt.target.name !== 'input-color-scheme-choose') return\n\n        try {\n            this.uibThemeSettings[window.location.pathname].theme = evt.target.value\n            localStorage.setItem('uibThemeSettings', JSON.stringify(this.uibThemeSettings))\n        } catch (e) {}\n\n        // TODO: Consider moving to a getter/setter\n        this.setTheme(evt.target.value)\n    }\n\n    /** Handle reset button. Override contrast css variables and set appropriate class on html\n     * @param {MouseEvent} evt\n     */\n    evtClickReset(evt) {\n        this.setTheme('none')\n        const els = this.shadowRoot.querySelectorAll('input[name=input-color-scheme-choose]')\n        for (let i = 0; i < els.length; i++) {\n            els[i].checked = false\n        }\n\n        this.evtClickContrast({ target: { name: 'contrast', value: 'standard' } })\n        const els1 = this.shadowRoot.querySelectorAll('input[name=contrast]')\n        for (let i = 0; i < els1.length; i++) {\n            els1[i].checked = false\n        }\n\n        delete this.uibThemeSettings[window.location.pathname]\n        localStorage.setItem('uibThemeSettings', JSON.stringify(this.uibThemeSettings))\n    }\n\n    /** Handle contrast click. Override contrast css variables and set appropriate class on html\n     * @param {MouseEvent} evt Click event\n     */\n    evtClickContrast(evt) {\n        if (evt.target.name !== 'contrast') return\n\n        const docRoot = document.documentElement\n\n        if ( evt.target.value === 'more' ) {\n            docRoot.style.setProperty('--text-bias', '1')\n            docRoot.style.setProperty('--surfaces-bias', '1')\n            docRoot.style.setProperty('--saturation-bias', '1')\n            docRoot.classList.remove('standard')\n            docRoot.classList.remove('less')\n            docRoot.classList.add('more')\n        } else if ( evt.target.value === 'less' ) {\n            docRoot.style.setProperty('--text-bias', '-.1')\n            docRoot.style.setProperty('--surfaces-bias', '-.05')\n            docRoot.style.setProperty('--saturation-bias', '-.05')\n            docRoot.classList.remove('standard')\n            docRoot.classList.remove('more')\n            docRoot.classList.add('less')\n        } else {\n            docRoot.style.removeProperty('--text-bias')\n            docRoot.style.removeProperty('--surfaces-bias')\n            docRoot.style.removeProperty('--saturation-bias')\n            docRoot.classList.remove('standard')\n            docRoot.classList.remove('more')\n            docRoot.classList.remove('less')\n\n        }\n\n        try {\n            this.uibThemeSettings[window.location.pathname].contrast = evt.target.value\n            localStorage.setItem('uibThemeSettings', JSON.stringify(this.uibThemeSettings))\n        } catch (e) {}\n    }\n} // ---- end of Class ---- //\n\n// Make the class the default export so it can be used elsewhere\nexport default UibThemeChanger\n\n/** Self register the class to global\n * Enables new data lists to be dynamically added via JS\n * and lets the static methods be called\n */\nwindow['UibThemeChanger'] = UibThemeChanger\n\n// Self-register the HTML tag\ncustomElements.define('uib-theme-changer', UibThemeChanger)\n"],
  "mappings": "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",
  "names": ["componentName", "template", "UibThemeChanger", "_UibThemeChanger", "componentName", "styleUrl", "docRoot", "evt", "attrib", "oldVal", "newVal", "url", "linkEl", "config", "target", "sources", "source", "k", "vs", "vt", "theme", "$", "els", "els1", "uib_theme_changer_default"]
}
