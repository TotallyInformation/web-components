var h=document.createElement("template");h.innerHTML=`
    <style>
        :host {
            margin: 2em;
        }
        :root {
            --base-font-size: 1em;
        }

        .timeline {
            display: flex;
            width: 100%;
            height: 5em;
            padding: 1em;

            justify-content: flex-start; /* Ensures items are aligned from the left */
            /* align-items: center; */
        }
    
        .state {
            height: 100%;
            transition: width 0.5s;
        }
    </style>

    <div class="timeline"></div>
`;var l=class n extends HTMLElement{static version="2024-09-18";online=navigator.onLine;uib=!!window.uibuilder;$;$$;static _iCount=0;colors={log:"green",error:"red",warn:"orange"};bgColors={info:"hsl(92, 100, 50, 0.3)",warn:"hsl(39, 100, 50, 0.3)",error:"hsl(0, 100, 50, 0.3)"};icons={log:"> ",info:"\u2139\uFE0F ",debug:"\u{1FAB2} ",trace:"\u{1F453} ",warn:"\u26A0\uFE0F ",error:"\u26D4 "};static defaultStates={undefined:{name:"undefined",label:"Undefined",color:"darkslategray"},offline:{name:"offline",label:"Offline",color:"grey"}};opts={states:n.defaultStates,timespan:43200,maxEntries:1e4};static get observedAttributes(){return["inherit-style"]}get version(){return n.version}constructor(){super(),this.attachShadow({mode:"open",delegatesFocus:!0}).append(h.content.cloneNode(!0)),this.$=this.shadowRoot?.querySelector.bind(this.shadowRoot),this.$$=this.shadowRoot?.querySelectorAll.bind(this.shadowRoot)}connectedCallback(){if(this.id||(this.name||(this.name=this.getAttribute("name")),this.name?this.id=this.name.toLowerCase().replace(/\s/g,"_"):this.id=`uib-meta-${++n._iCount}`),this.uib=!!window.uibuilder,this.hasAttribute("inherit-style")){let t=this.getAttribute("inherit-style");this.doInheritStyles(t)}this.timeline=this.shadowRoot?.querySelector(".timeline"),this.states=this.timeline?.getElementsByClassName("state"),this.prevTs=this.firstTs=new Date,this.updateState("undefined"),window.addEventListener("offline",t=>{console.warn("OFFLINE"),this.online=!1,this.updateState("offline")}),window.addEventListener("online",t=>{console.warn("ONLINE"),this.online=!0,this.updateState("undefined")}),this.dispatchEvent(new CustomEvent("state-timeline:connected",{bubbles:!0,composed:!0,detail:{id:this.id,name:this.name}}))}disconnectedCallback(){this.dispatchEvent(new CustomEvent("state-timeline:disconnected",{bubbles:!0,composed:!0,detail:{id:this.id,name:this.name}}))}attributeChangedCallback(t,s,e){s!==e&&(this[t]=e,this.dispatchEvent(new CustomEvent("state-timeline:attribChanged",{bubbles:!0,composed:!0,detail:{id:this.id,name:this.name,attribute:t,newVal:e,oldVal:s}})))}config(t){return t&&(this.opts=n.deepAssign(this.opts,t)),this.opts}async doInheritStyles(t){t||(t="./index.css");let s=document.createElement("link");s.setAttribute("type","text/css"),s.setAttribute("rel","stylesheet"),s.setAttribute("href",t),this.shadowRoot.appendChild(s),console.info(`[state-timeline] Inherit style requested. Loading: "${t}"`)}updateState(t){let s=this.opts,e=new Date,a=e-this.prevTs,i;this.states.length===0?(console.log("at the start"),i={dataset:{state:"undefined",start:this.firstTs.toISOString()}}):i=this.states.item(this.states.length-1),i.dataset.end=e.toISOString();let r=s.states[this.prevState];if(!r)throw new Error(`[state-timeline] State ${this.prevState} not found`);let o=document.createElement("div");o.dataset.state=i.dataset.state,o.dataset.start=e.toISOString(),o.dataset.end="",o.classList.add("state"),o.style.backgroundColor=r.color,console.info(`${t}: elapsed={from-start: ${e-this.firstTs}, from-prev: ${e-this.prevTs}}, #=${this.states.length}`);let c=a/s.timespan;this.timeline.appendChild(o),setTimeout(()=>{o.style.flexBasis=`${c}%`},50),this.prevTs=e,this.prevState=t}static deepAssign(t,...s){for(let e of s)for(let a in e){let i=e[a],r=t[a];if(Object(i)==i&&Object(r)===r){t[a]=n.deepAssign(r,i);continue}t[a]=e[a]}return t}},u=l;window.StateTimeline=l;customElements.define("state-timeline",l);var d=document.querySelector("state-timeline");if(d){window.tiTest=!0,setInterval(()=>{window.tiTest=!1},9e3);let n={true:{name:"true",label:"ON",color:"green"},false:{name:"false",label:"OFF",color:"red"}};d.config({states:n,timespan:30}),setInterval(()=>{if(window.tiTest&&navigator.onLine){let t=Math.random()>.5?"true":"false";d.updateState(t)}},3e3)}else console.error("No state-timeline found");export{u as default};
//# sourceMappingURL=state-timeline.esm.min.js.map
