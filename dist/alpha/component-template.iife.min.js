(()=>{var l=class a extends HTMLElement{static baseVersion="2025-06-03";static _iCount=0;uib=!!window.uibuilder;uibuilder=window.uibuilder;$;$$;connected=!1;name;opts={};static get version(){return`${this.componentVersion} (Base: ${this.baseVersion})`}constructor(){super()}config(t){return t&&(this.opts=a.deepAssign(this.opts,t)),this.opts}createShadowSelectors(){this.$=this.shadowRoot?.querySelector.bind(this.shadowRoot),this.$$=this.shadowRoot?.querySelectorAll.bind(this.shadowRoot)}static deepAssign(t,...e){for(let i of e)for(let n in i){let o=i[n],s=t[n];if(Object(o)==o&&Object(s)===s){t[n]=a.deepAssign(s,o);continue}t[n]=i[n]}return t}async doInheritStyles(){if(!this.shadowRoot||!this.hasAttribute("inherit-style"))return;let t=this.getAttribute("inherit-style");t||(t="./index.css");let e=document.createElement("link");e.setAttribute("type","text/css"),e.setAttribute("rel","stylesheet"),e.setAttribute("href",t),this.shadowRoot.appendChild(e),console.info(`[${this.localName}] Inherit-style requested. Loading: "${t}"`)}ensureId(){this.uib=!!window.uibuilder,this.id||(this.id=`${this.localName}-${++this.constructor._iCount}`)}prependStylesheet(t,e=0){if(!t)throw new Error(`[${this.localName}] cssText must be provided`);let i=this._findExistingStylesheet();if(i)return i;let n=document.createElement("style");return n.textContent=t,n.setAttribute("data-component",this.localName),n.setAttribute("data-order",e.toString()),this._prependToDocumentHead(n,e),n}uibSend(t,e){this.uib&&(this.uibuilder.ioConnected?this.uibuilder.send({topic:`${this.localName}:${t}`,payload:e,id:this.id,name:this.name}):console.warn(`[${this.localName}] uibuilder not connected to server, cannot send:`,t,e))}_connect(){this.ensureId(),this.doInheritStyles(),this.uib&&this.uibuilder.onTopic(`${this.localName}::${this.id}`,this._uibMsgHandler.bind(this))}_construct(t,e){t&&(e||(e={mode:"open",delegatesFocus:!0}),this.attachShadow(e).append(t),this.createShadowSelectors())}_disconnect(){document.removeEventListener(`uibuilder:msg:_ui:update:${this.id}`,this._uibMsgHandler),this._event("disconnected")}_event(t,e){this.dispatchEvent(new CustomEvent(`${this.localName}:${t}`,{bubbles:!0,composed:!0,detail:{id:this.id,name:this.name,data:e}}))}_ready(){this.connected=!0,this._event("connected"),this._event("ready")}_uibMsgHandler(t){if(typeof t.payload!="object"){console.warn(`[${this.localName}] Ignoring msg, payload is not an object:`,t);return}Object.keys(t.payload).forEach(e=>{e.startsWith("_")||(this[e]=t.payload[e])})}_findExistingStylesheet(){return document.head.querySelector(`style[data-component="${this.localName}"]`)}_prependToDocumentHead(t,e){let i=document.head,n=Array.from(i.querySelectorAll("style[data-component]"));if(n.length===0){let s=i.firstChild;s?i.insertBefore(t,s):i.appendChild(t);return}let o=null;for(let s of n){let c=parseInt(s.getAttribute("data-order")??"0",10);if(e<c){o=s;break}}if(o)i.insertBefore(t,o);else{let c=n[n.length-1].nextSibling;c?i.insertBefore(t,c):i.appendChild(t)}}},h=l;var d=document.createElement("template");d.innerHTML=`
    <style>
        :host {
            display: block;   /* default is inline */
            contain: content; /* performance boost */
        }
    </style>
    <slot></slot>
`;var r=class extends h{static componentVersion="2025-06-03";static get observedAttributes(){return["inherit-style","name"]}constructor(){super(),d&&d.content&&this._construct(d.content.cloneNode(!0))}connectedCallback(){this._connect(),this._ready()}disconnectedCallback(){this._disconnect()}attributeChangedCallback(t,e,i){e!==i&&(this[t]=i,this._event("attribChanged",{attribute:t,newVal:i,oldVal:e}))}},p=r;window.ComponentTemplate=r;customElements.define("component-template",r);})();
/**
 * @class
 * @augments TiBaseComponent
 * @description Define a new zero dependency custom web component ECMA module that can be used as an HTML tag
 *
 * @element component-template
 * @memberOf Alpha
 * @license Apache-2.0

 * METHODS FROM BASE: (see TiBaseComponent)
 * STANDARD METHODS:
  * @function attributeChangedCallback Called when an attribute is added, removed, updated or replaced
  * @function connectedCallback Called when the element is added to a document
  * @function constructor Construct the component
  * @function disconnectedCallback Called when the element is removed from a document

 * OTHER METHODS:
  * None

 * CUSTOM EVENTS:
  * "component-template:connected" - When an instance of the component is attached to the DOM. `evt.details` contains the details of the element.
  * "component-template:ready" - Alias for connected. The instance can handle property & attribute changes
  * "component-template:disconnected" - When an instance of the component is removed from the DOM. `evt.details` contains the details of the element.
  * "component-template:attribChanged" - When a watched attribute changes. `evt.details.data` contains the details of the change.
  * NOTE that listeners can be attached either to the `document` or to the specific element instance.

 * Standard watched attributes (common across all my components):
  * @property {string|boolean} inherit-style - Optional. Load external styles into component (only useful if using template). If present but empty, will default to './index.css'. Optionally give a URL to load.
  * @property {string} name - Optional. HTML name attribute. Included in output _meta prop.

 * Other watched attributes:
  * None

 * PROPS FROM BASE: (see TiBaseComponent)
 * OTHER STANDARD PROPS:
  * @property {string} componentVersion Static. The component version string (date updated). Also has a getter that returns component and base version strings.

 * Other props:
  * By default, all attributes are also created as properties

 NB: properties marked with ðŸ’« are dynamic and have getters/setters.

 * @slot Container contents

 * @example
  * <component-template name="myComponent" inherit-style="./myComponent.css"></component-template>

 * See https://github.com/runem/web-component-analyzer?tab=readme-ov-file#-how-to-document-your-components-using-jsdoc
 */
//# sourceMappingURL=component-template.iife.min.js.map
