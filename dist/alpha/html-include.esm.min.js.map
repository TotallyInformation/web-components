{
  "version": 3,
  "sources": ["../../alpha/html-include.js"],
  "sourcesContent": ["/** Zero dependency web component to load HTML/JSON dynamically\n * See https://github.com/justinfagnani/html-include-element for inspiration\n */\n\nconst template = document.createElement('template')\ntemplate.innerHTML = `\n    <slot></slot>\n    <inner-load></inner-load>\n`\n\nexport class HtmlInclude extends HTMLElement {\n\n    constructor() {\n        super()\n        this.type = 'text'\n        this.text = ''\n        this.json = {}\n        this.attachShadow({ mode: 'open', delegatesFocus: true })\n            .appendChild(template.content.cloneNode(true))\n    }\n\n    // component attributes\n    static get observedAttributes() {\n        return ['src']\n    }\n\n    /** The URL to fetch an HTML document from.\n     *  Setting this property causes a fetch the HTML from the URL.\n     *  We are reflecting the src attrib and the src prop.\n     */\n    get src() {\n        return this.getAttribute('src')\n    }\n\n    set src(value) {\n        this.setAttribute('src', value)\n    }\n\n    // attribute change\n    async attributeChangedCallback(property, oldValue, newValue) {\n\n        if (oldValue === newValue) return\n\n        if (property === 'src') {\n            const response = await fetch(newValue)\n\n            if (!response.ok) {\n                throw new Error(`html-include fetch failed: ${response.statusText}`)\n            }\n\n            const contentType = response.headers.get('content-type')\n            if (contentType) {\n                if (contentType.includes('text/html')) {\n                    this.type = 'html'\n                } else if (contentType.includes('application/json')) {\n                    this.type = 'json'\n                } else if (contentType.includes('multipart/form-data')) {\n                    this.type = 'form'\n                }\n            }\n\n            // Could add other binary types here. https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#body\n            switch (this.type) {\n                case 'html': {\n                    this.text = await response.text()\n                    const parser = new DOMParser()\n                    const newDoc = parser.parseFromString( this.text, 'text/html' )\n                    this.shadowRoot.removeChild(this.shadowRoot.lastElementChild)\n                    this.shadowRoot.appendChild(newDoc.body)\n                    break\n                }\n\n                case 'json': {\n                    this.json = await response.json()\n                    this.text = JSON.stringify(this.json, null, 4)\n                    this.shadowRoot.removeChild(this.shadowRoot.lastElementChild)\n                    const myHtml = document.createElement('pre')\n                    myHtml.textContent = this.text\n                    this.shadowRoot.appendChild( myHtml )\n                    break\n                }\n\n                case 'form': {\n                    this.json = await response.formData()\n                    this.text = JSON.stringify(this.json)\n                    this.shadowRoot.removeChild(this.shadowRoot.lastElementChild)\n                    this.shadowRoot.append(this.text)\n                    break\n                }\n\n                default: {\n                    this.text = await response.text()\n                    this.shadowRoot.append(this.text)\n                    break\n                }\n            }\n\n        }\n\n    }\n\n    // connect component\n    // connectedCallback() {\n    //     console.log('>> HelloWorld >> connectedCallback >>')\n    // }\n\n}\n\ncustomElements.define('html-include', HtmlInclude)\n"],
  "mappings": "AAIA,IAAMA,EAAW,SAAS,cAAc,UAAU,EAClDA,EAAS,UAAY;AAAA;AAAA;AAAA,EAKd,IAAMC,EAAN,cAA0B,WAAY,CAEzC,aAAc,CACV,MAAM,EACN,KAAK,KAAO,OACZ,KAAK,KAAO,GACZ,KAAK,KAAO,CAAC,EACb,KAAK,aAAa,CAAE,KAAM,OAAQ,eAAgB,EAAK,CAAC,EACnD,YAAYD,EAAS,QAAQ,UAAU,EAAI,CAAC,CACrD,CAGA,WAAW,oBAAqB,CAC5B,MAAO,CAAC,KAAK,CACjB,CAMA,IAAI,KAAM,CACN,OAAO,KAAK,aAAa,KAAK,CAClC,CAEA,IAAI,IAAIE,EAAO,CACX,KAAK,aAAa,MAAOA,CAAK,CAClC,CAGA,MAAM,yBAAyBC,EAAUC,EAAUC,EAAU,CAEzD,GAAID,IAAaC,GAEbF,IAAa,MAAO,CACpB,IAAMG,EAAW,MAAM,MAAMD,CAAQ,EAErC,GAAI,CAACC,EAAS,GACV,MAAM,IAAI,MAAM,8BAA8BA,EAAS,UAAU,EAAE,EAGvE,IAAMC,EAAcD,EAAS,QAAQ,IAAI,cAAc,EAYvD,OAXIC,IACIA,EAAY,SAAS,WAAW,EAChC,KAAK,KAAO,OACLA,EAAY,SAAS,kBAAkB,EAC9C,KAAK,KAAO,OACLA,EAAY,SAAS,qBAAqB,IACjD,KAAK,KAAO,SAKZ,KAAK,KAAM,CACf,IAAK,OAAQ,CACT,KAAK,KAAO,MAAMD,EAAS,KAAK,EAEhC,IAAME,EADS,IAAI,UAAU,EACP,gBAAiB,KAAK,KAAM,WAAY,EAC9D,KAAK,WAAW,YAAY,KAAK,WAAW,gBAAgB,EAC5D,KAAK,WAAW,YAAYA,EAAO,IAAI,EACvC,KACJ,CAEA,IAAK,OAAQ,CACT,KAAK,KAAO,MAAMF,EAAS,KAAK,EAChC,KAAK,KAAO,KAAK,UAAU,KAAK,KAAM,KAAM,CAAC,EAC7C,KAAK,WAAW,YAAY,KAAK,WAAW,gBAAgB,EAC5D,IAAMG,EAAS,SAAS,cAAc,KAAK,EAC3CA,EAAO,YAAc,KAAK,KAC1B,KAAK,WAAW,YAAaA,CAAO,EACpC,KACJ,CAEA,IAAK,OAAQ,CACT,KAAK,KAAO,MAAMH,EAAS,SAAS,EACpC,KAAK,KAAO,KAAK,UAAU,KAAK,IAAI,EACpC,KAAK,WAAW,YAAY,KAAK,WAAW,gBAAgB,EAC5D,KAAK,WAAW,OAAO,KAAK,IAAI,EAChC,KACJ,CAEA,QAAS,CACL,KAAK,KAAO,MAAMA,EAAS,KAAK,EAChC,KAAK,WAAW,OAAO,KAAK,IAAI,EAChC,KACJ,CACJ,CAEJ,CAEJ,CAOJ,EAEA,eAAe,OAAO,eAAgBL,CAAW",
  "names": ["template", "HtmlInclude", "value", "property", "oldValue", "newValue", "response", "contentType", "newDoc", "myHtml"]
}
