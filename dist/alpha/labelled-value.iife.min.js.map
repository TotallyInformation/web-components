{
  "version": 3,
  "sources": ["../../alpha/labelled-value.js"],
  "sourcesContent": ["/** Define a new zero dependency custom web component ECMA module that can be used as an HTML tag\n *\n * @version 0.1 2022-05-10 Pre-release\n *\n * See: https://web.dev/custom-elements-v1/, https://web.dev/shadowdom-v1/\n *\n * See https://github.com/runem/web-component-analyzer#-how-to-document-your-components-using-jsdoc on how to document\n * Use `npx web-component-analyzer ./components/button-send.js` to create/update the documentation\n *     or paste into https://runem.github.io/web-component-analyzer/\n * Use `npx web-component-analyzer ./components/*.js --format vscode --outFile ./vscode-descriptors/ti-web-components.html-data.json`\n *     to generate/update vscode custom data files. See https://github.com/microsoft/vscode-custom-data/tree/main/samples/webcomponents\n *\n **/\n/**\n * Copyright (c) 2022 Julian Knight (Totally Information)\n * https://it.knightnet.org.uk, https://github.com/TotallyInformation\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n **/\n\nconst componentName = 'labelled-value'\nconst className = 'LabelledValue'\n\n// tagged template - just for syntax highlighting in VSCode\nfunction html(strings, ...keys) {\n    return strings.map( (s, i) => {\n        return s + (keys[i] || '')\n    }).join('')\n}\n\nconst template = document.createElement('template')\ntemplate.innerHTML = html`\n    <style>\n        :host {\n            display: flex;   /* default is inline */\n            flex-flow: row nowrap;\n            width: 100%;\n            contain: content; /* performance boost */\n        }\n        #label, .value {\n            flex-grow: 1;\n            flex-shrink: 1;\n        }\n        #label:after {\n            content: ':';\n        }\n        .value {\n            text-align: right;\n        }\n    </style>\n    <div id=\"label\"></div><div id=\"value\" class=\"value\" aria-labelledby=\"label\"></div><slot></slot>\n`\n\n// Define the class and make it the default export\n/**\n * @element labelled-value\n *\n * @fires labelled-value:construction - Document object event. evt.details contains the data\n * @fires labelled-value:connected - When an instance of the component is attached to the DOM. `evt.details` contains the details of the element.\n * @fires labelled-value:disconnected - When an instance of the component is removed from the DOM. `evt.details` contains the details of the element.\n * @fires labelled-value:attribChanged - When a watched attribute changes. `evt.details` contains the details of the change.\n * NOTE that listeners can be attached either to the `document` or to the specific element instance.\n *\n * @attr {string} name - Optional. Will be used to synthesize an ID if no ID is provided.\n * attr {string} data-* - Optional. All data-* attributes are returned in the _meta prop as a _meta.data object.\n *\n * @prop {string} name - Sync'd from name attribute\n *\n * @slot Container contents\n *\n * @csspart ??? - Uses the uib-styles.css uibuilder master for variables where available.\n */\nexport default class LabelledValue extends HTMLElement {\n    //#region ---- Class Variables ----\n\n    /** Holds a count of how many instances of this component are on the page Must be static (accumulates across instances) */\n    static #iCount = 0\n\n    /** Standard _ui object to include in msgs */\n    _ui = {\n        type: componentName,\n        event: undefined,\n        id: undefined,\n        name: undefined,\n        data: undefined, // All of the data-* attributes as an object\n    }\n\n    /** Mini jQuery-like shadow dom selector (see constructor) */\n    $\n\n    /** Holds the name for this instance of the component */\n    name = undefined\n\n    label = undefined\n    value = undefined\n\n    //#endregion ---- ---- ---- ----\n\n    //#region ---- Utility Functions ----\n\n    /** Make sure that the component instance has an ID */\n    _ensureId() {\n        this.name = this.getAttribute('name')\n        if (!this.id) {\n            if (this.name) this.id = this.name.toLowerCase().replace(/\\s/g, '_')\n            else this.id = `${componentName}-${LabelledValue.#iCount}`\n        }\n    }\n\n    /** Handle a `uibuilder:msg:_ui:update:${this.id}` custom event\n     * @param {CustomEvent} evt uibuilder `uibuilder:msg:_ui:update:${this.id}` custom event evt.details contains the data\n     */\n    _uibMsgHandler(evt) {\n        // If there is a payload, we want to replace the VALUE\n        if ( evt['detail'].payload ) {\n            const el = this.shadowRoot.getElementById('value')\n            el.innerHTML = evt['detail'].payload\n        }\n        // TODO allow evt['detail'].value and evt['detail'].label\n    }\n\n    //#endregion ---- ---- ---- ----\n\n    constructor() {\n\n        super()\n        this.attachShadow({ mode: 'open', delegatesFocus: true })\n            .append(template.content.cloneNode(true))\n\n        this.$ = this.shadowRoot.querySelector.bind(this.shadowRoot)\n\n        document.dispatchEvent(new Event(`${componentName}:construction`, { bubbles: true, composed: true }))\n\n    } // ---- end of constructor ----\n\n    // List all attribs we want to observe\n    static get observedAttributes() { return [\n        'name', 'label', 'value',\n    ] }\n\n    // Runs when an observed attribute changes - Note: values are always strings\n    attributeChangedCallback(name, oldVal, newVal) {\n\n        // Don't bother if the new value same as old\n        if ( oldVal === newVal ) return\n\n        // Create a property from the value - WARN: Be careful with name clashes\n        this[name] = newVal\n\n        switch (name) {\n            case 'label': {\n                this.shadowRoot.querySelector('#label').textContent = newVal\n                break\n            }\n            case 'value': {\n                this.shadowRoot.querySelector('.value').textContent = newVal\n                break\n            }\n\n            default: {\n                break\n            }\n        }\n\n        document.dispatchEvent(new CustomEvent(`${componentName}:attribChanged`, {\n            bubbles: true,\n            composed: true,\n            detail: {\n                id: this.id,\n                name: this.name,\n                attribute: name,\n                newVal: newVal,\n                oldVal: oldVal,\n            }\n        } ) )\n\n    } // --- end of attributeChangedCallback --- //\n\n    // Runs when an instance is added to the DOM\n    connectedCallback() {\n        ++LabelledValue.#iCount // increment total instance count\n\n        // Create an id from name or calculation if needed\n        this._ensureId()\n\n        // Listen for a uibuilder msg that is targetted at this instance of the component\n        document.addEventListener(`uibuilder:msg:_ui:update:${this.id}`, this._uibMsgHandler.bind(this) )\n\n        document.dispatchEvent(new CustomEvent(`${componentName}:connected`, {\n            bubbles: true,\n            composed: true,\n            detail: {\n                id: this.id,\n                name: this.name\n            },\n        } ) )\n\n    } // ---- end of connectedCallback ---- //\n\n    // Runs when an instance is removed from the DOM\n    disconnectedCallback() {\n        // NB: Dont decrement SimpleCard._iCount because that could lead to id nameclashes\n\n        document.removeEventListener(`uibuilder:msg:_ui:update:${this.id}`, this._uibMsgHandler )\n\n        document.dispatchEvent(new CustomEvent(`${componentName}:disconnected`, {\n            bubbles: true,\n            composed: true,\n            detail: {\n                id: this.id,\n                name: this.name\n            },\n        } ) )\n\n    } // ---- end of disconnectedCallback ---- //\n\n} // ---- end of Class ---- //\n\n/** Self register the class to global\n * Enables new data lists to be dynamically added via JS\n * and lets the static methods be called\n */\nwindow[className] = LabelledValue\n\n// Self-register the HTML tag\ncustomElements.define(componentName, LabelledValue)\n"],
  "mappings": "MA8BA,IAAMA,EAAgB,iBAChBC,EAAY,gBAGlB,SAASC,EAAKC,KAAYC,EAAM,CAC5B,OAAOD,EAAQ,IAAK,CAACE,EAAGC,IACbD,GAAKD,EAAKE,CAAC,GAAK,GAC1B,EAAE,KAAK,EAAE,CACd,CAEA,IAAMC,EAAW,SAAS,cAAc,UAAU,EAClDA,EAAS,UAAYL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAyCrB,IAAqBM,EAArB,MAAqBC,UAAsB,WAAY,CAInD,MAAOC,GAAU,EAGjB,IAAM,CACF,KAAMV,EACN,MAAO,OACP,GAAI,OACJ,KAAM,OACN,KAAM,MACV,EAGA,EAGA,KAAO,OAEP,MAAQ,OACR,MAAQ,OAOR,WAAY,CACR,KAAK,KAAO,KAAK,aAAa,MAAM,EAC/B,KAAK,KACF,KAAK,KAAM,KAAK,GAAK,KAAK,KAAK,YAAY,EAAE,QAAQ,MAAO,GAAG,EAC9D,KAAK,GAAK,GAAGA,CAAa,IAAIS,EAAcC,EAAO,GAEhE,CAKA,eAAeC,EAAK,CAEhB,GAAKA,EAAI,OAAU,QAAU,CACzB,IAAMC,EAAK,KAAK,WAAW,eAAe,OAAO,EACjDA,EAAG,UAAYD,EAAI,OAAU,OACjC,CAEJ,CAIA,aAAc,CAEV,MAAM,EACN,KAAK,aAAa,CAAE,KAAM,OAAQ,eAAgB,EAAK,CAAC,EACnD,OAAOJ,EAAS,QAAQ,UAAU,EAAI,CAAC,EAE5C,KAAK,EAAI,KAAK,WAAW,cAAc,KAAK,KAAK,UAAU,EAE3D,SAAS,cAAc,IAAI,MAAM,GAAGP,CAAa,gBAAiB,CAAE,QAAS,GAAM,SAAU,EAAK,CAAC,CAAC,CAExG,CAGA,WAAW,oBAAqB,CAAE,MAAO,CACrC,OAAQ,QAAS,OACrB,CAAE,CAGF,yBAAyBa,EAAMC,EAAQC,EAAQ,CAG3C,GAAKD,IAAWC,EAKhB,QAFA,KAAKF,CAAI,EAAIE,EAELF,EAAM,CACV,IAAK,QAAS,CACV,KAAK,WAAW,cAAc,QAAQ,EAAE,YAAcE,EACtD,KACJ,CACA,IAAK,QAAS,CACV,KAAK,WAAW,cAAc,QAAQ,EAAE,YAAcA,EACtD,KACJ,CAEA,QACI,KAER,CAEA,SAAS,cAAc,IAAI,YAAY,GAAGf,CAAa,iBAAkB,CACrE,QAAS,GACT,SAAU,GACV,OAAQ,CACJ,GAAI,KAAK,GACT,KAAM,KAAK,KACX,UAAWa,EACX,OAAQE,EACR,OAAQD,CACZ,CACJ,CAAE,CAAE,EAER,CAGA,mBAAoB,CAChB,EAAEL,EAAcC,GAGhB,KAAK,UAAU,EAGf,SAAS,iBAAiB,4BAA4B,KAAK,EAAE,GAAI,KAAK,eAAe,KAAK,IAAI,CAAE,EAEhG,SAAS,cAAc,IAAI,YAAY,GAAGV,CAAa,aAAc,CACjE,QAAS,GACT,SAAU,GACV,OAAQ,CACJ,GAAI,KAAK,GACT,KAAM,KAAK,IACf,CACJ,CAAE,CAAE,CAER,CAGA,sBAAuB,CAGnB,SAAS,oBAAoB,4BAA4B,KAAK,EAAE,GAAI,KAAK,cAAe,EAExF,SAAS,cAAc,IAAI,YAAY,GAAGA,CAAa,gBAAiB,CACpE,QAAS,GACT,SAAU,GACV,OAAQ,CACJ,GAAI,KAAK,GACT,KAAM,KAAK,IACf,CACJ,CAAE,CAAE,CAER,CAEJ,EAMA,OAAOC,CAAS,EAAIO,EAGpB,eAAe,OAAOR,EAAeQ,CAAa",
  "names": ["componentName", "className", "html", "strings", "keys", "s", "i", "template", "LabelledValue", "_LabelledValue", "#iCount", "evt", "el", "name", "oldVal", "newVal"]
}
