var s=document.createElement("template");s.innerHTML=`
    <style>
        :host {
        }
    </style>
    <slot></slot>
    <dl>
    </dl>
`;var e=class extends HTMLElement{$(t){return this.shadowRoot&&this.shadowRoot.querySelector(t)}constructor(){super(),this.attachShadow({mode:"open",delegatesFocus:!0}).append(s.content.cloneNode(!0)),this._data={...this.dataset},this._name=this.getAttribute("name"),this._msg={topic:this.topic,payload:this.payload?this.payload:this._data,_meta:{id:this.id,name:this._name,data:this._data}},this._clickEvt=new CustomEvent("button-send:click",{detail:this._msg});try{this.uibuilder=window.uibuilder}catch{this.uibuilder=void 0}this.addEventListener("click",t=>{t.preventDefault(),this._msg._meta={id:this.id,name:this._name,data:this._data,altKey:t.altKey,ctrlKey:t.ctrlKey,shiftKey:t.shiftKey,metaKey:t.metaKey},document.dispatchEvent(this._clickEvt),this.uibuilder.send(this._msg)}),this.topic=void 0,this.payload=void 0}static get observedAttributes(){return["topic","payload"]}attributeChangedCallback(t,a,i){a!==i&&(this[t]=i)}};customElements.define("definition-list",e);export{e as default};
//# sourceMappingURL=definition-list.esm.min.js.map
