var e="nav-bar",r="NavBar",l=document.createElement("template");l.innerHTML=`
    <style>
        :host {
            /* display: block;   default is inline */
            /* contain: content; performance boost */
            box-sizing: border-box;
            /* position: relative; */
            width: 100%;
            background-color: var(--surface1);
            color: var(--text1);
            padding: 0;
            margin: 0 0 0.8rem 0;
            /* border: 2px solid silver; */
        }
        nav {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            /* justify-content: space-between; */
            align-items: center;
            width: 100%;
            /* overflow-x: auto; */
        }
        nav * {
            /* display: block; */
            margin: .1rem;
        }
        ul {
            list-style: none;
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            /* justify-content: space-between; */
            align-items: right;
            position: relative;
        }
        li {
            display: inline-block;
            padding: .1rem .5rem; margin:0;
        }
        li:hover a {
            color: var(--text3);
        }
        a {
            text-decoration: none;
            color: var(--text1);
        }
        ul ul {
            display: none;
        }
        .logo {
            order: 0;
            flex: 0 1 auto;
            align-self: auto;
            color: var(--primary-bg);
            padding: .1rem .5rem;
            font-weight: bold;
        }
        .hamburger {
            order: 0;
            flex: 0 1 auto;
            align-self: auto;
            font-weight: bold;
            /* color: var(--primary-bg); */
            color: var(--brand);
        }
        .hamburger:hover {
            color: var(--text1);
        }
        .main-menu {
            order: 0;
            flex: 1 1 auto;
            align-self: auto;
        }
        /* TODO: replace .sub-menu with li:has(>ul) when :has is well supported */
        .sub-menu:hover {
            position: relative;
            z-index: 10;
        }
        .sub-menu:hover ul, .sub-menu ul:hover {
            display: initial;
            /* display: block; */
            position: absolute;
            top: 1.1rem;
            left: 1rem;
            z-index: 20;
            padding: 0; margin:0;
            border: 1px solid silver;
        }
        .sub-menu:hover ul li, .sub-menu ul li:hover {
            display: block;
            background-color: var(--surface1);
            color: var(--text1);
            z-index: 30;
            
            width: fit-content;
        }
        .sub-menu ul li:hover a {
            color: var(--text1);
        }
        #checkbox_toggle {
            display: none;
        }
        #checkbox_toggle:checked + .main-menu {
            display: none;
        }

        @media (max-width: 768px) {
            /* Only display hamburger and log on small screens */
            .main-menu {
                display: none;
            }
            #checkbox_toggle:checked + .main-menu {
                display: flex;
            }
            /* #checkbox_toggle:not:checked + ul {
                display: none;
            } */
        }
    </style>
    <nav>
        <label for="checkbox_toggle" class="hamburger">&#9776;</label>
        <div class="logo"><slot name="logo">Menu</slot></div>
        <input type="checkbox" id="checkbox_toggle">
        <ul class="main-menu">
            <slot>
            <li><a href="/">Home</a></li>
            <li><a href="/">About</a></li>
            <li class="sub-menu">
                <a href="/">Services</a>
                <ul>
                    <li><a href="/">Dropdown&nbsp;1 </a></li>
                    <li><a href="/">Dropdown 2</a></li>
                    <li><a href="/">Dropdown 3</a></li>
                    <li><a href="/">Dropdown 4</a></li>
                    <li><a href="/">Dropdown 5</a></li>
                </ul>
            </li>
            <li><a href="/">Pricing</a></li>

            <li class="button"><a href="#">Log In</a></li>
            <li class="button secondary"><a href="#">Sign Up</a></li>
            </slot>
        </ul>
    </nav>
`;var t=class o extends HTMLElement{_ui={type:e,event:void 0,id:void 0,name:void 0,data:void 0};$;name=void 0;static _iCount=0;_uibMsgHandler(i){}constructor(){super(),this.attachShadow({mode:"open",delegatesFocus:!0}).append(l.content.cloneNode(!0)),this.$=this.shadowRoot.querySelector.bind(this.shadowRoot),this.dispatchEvent(new Event(`${e}:construction`,{bubbles:!0,composed:!0}))}static get observedAttributes(){return["name"]}attributeChangedCallback(i,a,n){a!==n&&(this[i]=n,this.dispatchEvent(new CustomEvent(`${e}:attribChanged`,{bubbles:!0,composed:!0,detail:{id:this.id,name:this.name,attribute:i,newVal:n,oldVal:a}})))}connectedCallback(){++o._iCount,this.name=this.getAttribute("name"),this.id||(this.name?this.id=this.name.toLowerCase().replace(/\s/g,"_"):this.id=`sc-${o._iCount}`),document.addEventListener(`uibuilder:msg:_ui:update:${this.id}`,this._uibMsgHandler.bind(this)),this.dispatchEvent(new CustomEvent(`${e}:connected`,{bubbles:!0,composed:!0,detail:{id:this.id,name:this.name}}))}disconnectedCallback(){document.removeEventListener(`uibuilder:msg:_ui:update:${this.id}`,this._uibMsgHandler),this.dispatchEvent(new CustomEvent(`${e}:disconnected`,{bubbles:!0,composed:!0,detail:{id:this.id,name:this.name}}))}};window[r]=t;customElements.define(e,t);export{t as default};
//# sourceMappingURL=nav-bar.esm.min.js.map
