{
  "version": 3,
  "sources": ["../../src/alpha/simple-container.js"],
  "sourcesContent": ["/** Define a new zero dependency custom web component ECMA module that can be used as an HTML tag\n *\n * @version 0.2 2022-05-10 Early-release\n *\n * See https://github.com/runem/web-component-analyzer#-how-to-document-your-components-using-jsdoc on how to document\n * Use `npx web-component-analyzer ./components/button-send.js` to create/update the documentation\n *     or paste into https://runem.github.io/web-component-analyzer/\n * Use `npx web-component-analyzer ./components/*.js --format vscode --outFile ./vscode-descriptors/ti-web-components.html-data.json`\n *     to generate/update vscode custom data files. See https://github.com/microsoft/vscode-custom-data/tree/main/samples/webcomponents\n *\n **/\n/**\n * Copyright (c) 2022 Julian Knight (Totally Information)\n * https://it.knightnet.org.uk, https://github.com/TotallyInformation\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n **/\n\n// tagged template - just for syntax highlighting in VSCode\nfunction html(strings, ...keys) {\n    return strings.map( (s, i) => {\n        return s + (keys[i] || '')\n    }).join('')\n}\n\nconst template = document.createElement('template')\ntemplate.innerHTML = html`\n    <style>\n        :host {\n            position: relative;\n            display: flex;\n            flex-direction: row;\n            flex-wrap: wrap;\n            box-sizing: border-box;\n            width: 100%;\n            max-width: 720px;\n            padding-right: 1rem;\n            padding-left: 1rem;\n            margin-right: auto;\n            margin-left: auto;\n        }\n    </style>\n    <slot role=\"region\" aria-label=\"Content Grid\"></slot>\n`\n\n// Define the class and make it the default export\n/** A simple container component\n *\n * @element simple-container\n *\n * fires simple-container:click - Document object event. evt.details contains the data\n *\n * attr {string} data-* - Optional. All data-* attributes are returned in the _meta prop as a _meta.data object.\n *\n * prop {any|string} payload - Can be an attribute or property. If used as property, must not use payload attribute in html, aAllows any data to be attached to payload. As an attribute, allows a string only.\n *\n * @slot Container contents\n *\n * @csspart ??? - Uses the uib-styles.css uibuilder master for variables where available.\n */\nexport default class SimpleContainer extends HTMLElement {\n    //#region ---- Class Variables ----\n\n    /** Standard _ui object to include in msgs */\n    _ui = {\n        type: 'button-send',\n        event: undefined,\n        id: undefined,\n        name: undefined,\n        data: undefined, // All of the data-* attributes as an object\n    }\n\n    //#endregion ---- ---- ---- ----\n\n    //#region ---- Utility Functions ----\n\n    /** Mini jQuery-like shadow dom selector\n     * @param {keyof HTMLElementTagNameMap} selection HTML element selector\n     */\n    $(selection) {\n        return this.shadowRoot && this.shadowRoot.querySelector(selection)\n    }\n\n    //#endregion ---- ---- ---- ----\n\n    constructor() {\n        super()\n        this.attachShadow({ mode: 'open', delegatesFocus: true })\n            .append(template.content.cloneNode(true))\n\n        // this._list = this.shadowRoot.querySelector('ul')\n\n    }\n\n    // List all attribs we want to observe\n    static get observedAttributes() { return [\n\n    ] }\n\n    // Runs when an observed attribute changes - Note: values are always strings\n    attributeChangedCallback(name, oldVal, newVal) {\n\n        // Don't bother if the new value same as old\n        if ( oldVal === newVal ) return\n\n        // Create a property from the value - WARN: Be careful with name clashes\n        this[name] = newVal\n\n    } // --- end of attributeChangedCallback --- //\n\n    // Runs when an instance is added to the DOM\n    connectedCallback() {\n    }\n\n    // Runs when an instance is removed from the DOM\n    disconnectedCallback() {\n    }\n\n} // ---- end of Class ---- //\n\n/** Self register the class to global\n * Enables new data lists to be dynamically added via JS\n * and lets the static methods be called\n */\nwindow['SimpleContainer'] = SimpleContainer\n\n// Self-register the HTML tag\ncustomElements.define('simple-container', SimpleContainer)\n"],
  "mappings": "MA6BA,SAASA,EAAKC,KAAYC,EAAM,CAC5B,OAAOD,EAAQ,IAAK,CAACE,EAAGC,IACbD,GAAKD,EAAKE,CAAC,GAAK,GAC1B,EAAE,KAAK,EAAE,CACd,CAEA,IAAMC,EAAW,SAAS,cAAc,UAAU,EAClDA,EAAS,UAAYL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkCrB,IAAqBM,EAArB,cAA6C,WAAY,CAIrD,IAAM,CACF,KAAM,cACN,MAAO,OACP,GAAI,OACJ,KAAM,OACN,KAAM,MACV,EASA,EAAEC,EAAW,CACT,OAAO,KAAK,YAAc,KAAK,WAAW,cAAcA,CAAS,CACrE,CAIA,aAAc,CACV,MAAM,EACN,KAAK,aAAa,CAAE,KAAM,OAAQ,eAAgB,EAAK,CAAC,EACnD,OAAOF,EAAS,QAAQ,UAAU,EAAI,CAAC,CAIhD,CAGA,WAAW,oBAAqB,CAAE,MAAO,CAEzC,CAAE,CAGF,yBAAyBG,EAAMC,EAAQC,EAAQ,CAGtCD,IAAWC,IAGhB,KAAKF,CAAI,EAAIE,EAEjB,CAGA,mBAAoB,CACpB,CAGA,sBAAuB,CACvB,CAEJ,EAMA,OAAO,gBAAqBJ,EAG5B,eAAe,OAAO,mBAAoBA,CAAe",
  "names": ["html", "strings", "keys", "s", "i", "template", "SimpleContainer", "selection", "name", "oldVal", "newVal"]
}
